
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001aa  00800100  000014cc  00001560  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000014cc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000016  008002aa  008002aa  0000170a  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  0000170a  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000001d6  00000000  00000000  0000172a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00003152  00000000  00000000  00001900  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000292  00000000  00000000  00004a52  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00002016  00000000  00000000  00004ce4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000180  00000000  00000000  00006cfc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000203  00000000  00000000  00006e7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001322  00000000  00000000  0000707f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000198  00000000  00000000  000083a1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
       4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      50:	0c 94 50 05 	jmp	0xaa0	; 0xaa0 <__vector_20>
      54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      70:	0c 94 f5 04 	jmp	0x9ea	; 0x9ea <__vector_28>
      74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
      7c:	11 24       	eor	r1, r1
      7e:	1f be       	out	0x3f, r1	; 63
      80:	cf ef       	ldi	r28, 0xFF	; 255
      82:	d0 e1       	ldi	r29, 0x10	; 16
      84:	de bf       	out	0x3e, r29	; 62
      86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
      88:	12 e0       	ldi	r17, 0x02	; 2
      8a:	a0 e0       	ldi	r26, 0x00	; 0
      8c:	b1 e0       	ldi	r27, 0x01	; 1
      8e:	ec ec       	ldi	r30, 0xCC	; 204
      90:	f4 e1       	ldi	r31, 0x14	; 20
      92:	02 c0       	rjmp	.+4      	; 0x98 <.do_copy_data_start>

00000094 <.do_copy_data_loop>:
      94:	05 90       	lpm	r0, Z+
      96:	0d 92       	st	X+, r0

00000098 <.do_copy_data_start>:
      98:	aa 3a       	cpi	r26, 0xAA	; 170
      9a:	b1 07       	cpc	r27, r17
      9c:	d9 f7       	brne	.-10     	; 0x94 <.do_copy_data_loop>

0000009e <__do_clear_bss>:
      9e:	12 e0       	ldi	r17, 0x02	; 2
      a0:	aa ea       	ldi	r26, 0xAA	; 170
      a2:	b2 e0       	ldi	r27, 0x02	; 2
      a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
      a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
      a8:	a0 3c       	cpi	r26, 0xC0	; 192
      aa:	b1 07       	cpc	r27, r17
      ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
      ae:	0e 94 84 05 	call	0xb08	; 0xb08 <main>
      b2:	0c 94 64 0a 	jmp	0x14c8	; 0x14c8 <_exit>

000000b6 <__bad_interrupt>:
      b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <uartinit>:
unsigned char emptylib_ack[12]={0xEF,0X01,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x03,0X00,0x00,0X0A};
unsigned char deletetemp_ack[12]={0xEF,0X01,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x03,0X00,0x00,0X0A};

void uartinit(void)
{
	UBRR0L=0x0C;
      ba:	8c e0       	ldi	r24, 0x0C	; 12
      bc:	80 93 c4 00 	sts	0x00C4, r24
	UCSR0B |= (1 << RXEN0 ) | (1 << TXEN0 )| (1<<RXCIE0);
      c0:	e1 ec       	ldi	r30, 0xC1	; 193
      c2:	f0 e0       	ldi	r31, 0x00	; 0
      c4:	80 81       	ld	r24, Z
      c6:	88 69       	ori	r24, 0x98	; 152
      c8:	80 83       	st	Z, r24

}
      ca:	08 95       	ret

000000cc <uart_trans>:


uart_trans(char tx_data)
{
      cc:	98 2f       	mov	r25, r24
	while (( UCSR0A & (1 << UDRE0 )) == 0);
      ce:	80 91 c0 00 	lds	r24, 0x00C0
      d2:	85 ff       	sbrs	r24, 5
      d4:	fc cf       	rjmp	.-8      	; 0xce <uart_trans+0x2>
	UDR0 = tx_data ;
      d6:	90 93 c6 00 	sts	0x00C6, r25
	
}
      da:	08 95       	ret

000000dc <stransmit0>:

void stransmit0(char *p)
{
      dc:	fc 01       	movw	r30, r24
      de:	07 c0       	rjmp	.+14     	; 0xee <stransmit0+0x12>
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
      e0:	80 91 c0 00 	lds	r24, 0x00C0
      e4:	85 ff       	sbrs	r24, 5
      e6:	fc cf       	rjmp	.-8      	; 0xe0 <stransmit0+0x4>
	
}

void stransmit0(char *p)
{
	while(*p) uart_trans(*p++);
      e8:	31 96       	adiw	r30, 0x01	; 1


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
	UDR0 = tx_data ;
      ea:	90 93 c6 00 	sts	0x00C6, r25
	
}

void stransmit0(char *p)
{
	while(*p) uart_trans(*p++);
      ee:	90 81       	ld	r25, Z
      f0:	99 23       	and	r25, r25
      f2:	b1 f7       	brne	.-20     	; 0xe0 <stransmit0+0x4>
}
      f4:	08 95       	ret

000000f6 <gentempnum>:
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
      f6:	80 91 c0 00 	lds	r24, 0x00C0
      fa:	85 ff       	sbrs	r24, 5
      fc:	fc cf       	rjmp	.-8      	; 0xf6 <gentempnum>
	UDR0 = tx_data ;
      fe:	8f ee       	ldi	r24, 0xEF	; 239
     100:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     104:	80 91 c0 00 	lds	r24, 0x00C0
     108:	85 ff       	sbrs	r24, 5
     10a:	fc cf       	rjmp	.-8      	; 0x104 <gentempnum+0xe>
	UDR0 = tx_data ;
     10c:	81 e0       	ldi	r24, 0x01	; 1
     10e:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     112:	80 91 c0 00 	lds	r24, 0x00C0
     116:	85 ff       	sbrs	r24, 5
     118:	fc cf       	rjmp	.-8      	; 0x112 <gentempnum+0x1c>
	UDR0 = tx_data ;
     11a:	8f ef       	ldi	r24, 0xFF	; 255
     11c:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     120:	80 91 c0 00 	lds	r24, 0x00C0
     124:	85 ff       	sbrs	r24, 5
     126:	fc cf       	rjmp	.-8      	; 0x120 <gentempnum+0x2a>
	UDR0 = tx_data ;
     128:	8f ef       	ldi	r24, 0xFF	; 255
     12a:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     12e:	80 91 c0 00 	lds	r24, 0x00C0
     132:	85 ff       	sbrs	r24, 5
     134:	fc cf       	rjmp	.-8      	; 0x12e <gentempnum+0x38>
	UDR0 = tx_data ;
     136:	8f ef       	ldi	r24, 0xFF	; 255
     138:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     13c:	80 91 c0 00 	lds	r24, 0x00C0
     140:	85 ff       	sbrs	r24, 5
     142:	fc cf       	rjmp	.-8      	; 0x13c <gentempnum+0x46>
	UDR0 = tx_data ;
     144:	8f ef       	ldi	r24, 0xFF	; 255
     146:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     14a:	80 91 c0 00 	lds	r24, 0x00C0
     14e:	85 ff       	sbrs	r24, 5
     150:	fc cf       	rjmp	.-8      	; 0x14a <gentempnum+0x54>
	UDR0 = tx_data ;
     152:	81 e0       	ldi	r24, 0x01	; 1
     154:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     158:	80 91 c0 00 	lds	r24, 0x00C0
     15c:	85 ff       	sbrs	r24, 5
     15e:	fc cf       	rjmp	.-8      	; 0x158 <gentempnum+0x62>
	UDR0 = tx_data ;
     160:	10 92 c6 00 	sts	0x00C6, r1
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     164:	80 91 c0 00 	lds	r24, 0x00C0
     168:	85 ff       	sbrs	r24, 5
     16a:	fc cf       	rjmp	.-8      	; 0x164 <gentempnum+0x6e>
	UDR0 = tx_data ;
     16c:	83 e0       	ldi	r24, 0x03	; 3
     16e:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     172:	80 91 c0 00 	lds	r24, 0x00C0
     176:	85 ff       	sbrs	r24, 5
     178:	fc cf       	rjmp	.-8      	; 0x172 <gentempnum+0x7c>
	UDR0 = tx_data ;
     17a:	8d e1       	ldi	r24, 0x1D	; 29
     17c:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     180:	80 91 c0 00 	lds	r24, 0x00C0
     184:	85 ff       	sbrs	r24, 5
     186:	fc cf       	rjmp	.-8      	; 0x180 <gentempnum+0x8a>
	UDR0 = tx_data ;
     188:	10 92 c6 00 	sts	0x00C6, r1
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     18c:	80 91 c0 00 	lds	r24, 0x00C0
     190:	85 ff       	sbrs	r24, 5
     192:	fc cf       	rjmp	.-8      	; 0x18c <gentempnum+0x96>
	UDR0 = tx_data ;
     194:	81 e2       	ldi	r24, 0x21	; 33
     196:	80 93 c6 00 	sts	0x00C6, r24
     19a:	84 ef       	ldi	r24, 0xF4	; 244
     19c:	91 e0       	ldi	r25, 0x01	; 1
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     19e:	28 ec       	ldi	r18, 0xC8	; 200
     1a0:	30 e0       	ldi	r19, 0x00	; 0
     1a2:	f9 01       	movw	r30, r18
     1a4:	31 97       	sbiw	r30, 0x01	; 1
     1a6:	f1 f7       	brne	.-4      	; 0x1a4 <gentempnum+0xae>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     1a8:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     1aa:	d9 f7       	brne	.-10     	; 0x1a2 <gentempnum+0xac>
	uart_trans(0x03);
	uart_trans(0x1D);
	uart_trans(0x00);
	uart_trans(0x21);
	_delay_ms(50);
}
     1ac:	08 95       	ret

000001ae <emptylib>:
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     1ae:	80 91 c0 00 	lds	r24, 0x00C0
     1b2:	85 ff       	sbrs	r24, 5
     1b4:	fc cf       	rjmp	.-8      	; 0x1ae <emptylib>
	UDR0 = tx_data ;
     1b6:	8f ee       	ldi	r24, 0xEF	; 239
     1b8:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     1bc:	80 91 c0 00 	lds	r24, 0x00C0
     1c0:	85 ff       	sbrs	r24, 5
     1c2:	fc cf       	rjmp	.-8      	; 0x1bc <emptylib+0xe>
	UDR0 = tx_data ;
     1c4:	81 e0       	ldi	r24, 0x01	; 1
     1c6:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     1ca:	80 91 c0 00 	lds	r24, 0x00C0
     1ce:	85 ff       	sbrs	r24, 5
     1d0:	fc cf       	rjmp	.-8      	; 0x1ca <emptylib+0x1c>
	UDR0 = tx_data ;
     1d2:	8f ef       	ldi	r24, 0xFF	; 255
     1d4:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     1d8:	80 91 c0 00 	lds	r24, 0x00C0
     1dc:	85 ff       	sbrs	r24, 5
     1de:	fc cf       	rjmp	.-8      	; 0x1d8 <emptylib+0x2a>
	UDR0 = tx_data ;
     1e0:	8f ef       	ldi	r24, 0xFF	; 255
     1e2:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     1e6:	80 91 c0 00 	lds	r24, 0x00C0
     1ea:	85 ff       	sbrs	r24, 5
     1ec:	fc cf       	rjmp	.-8      	; 0x1e6 <emptylib+0x38>
	UDR0 = tx_data ;
     1ee:	8f ef       	ldi	r24, 0xFF	; 255
     1f0:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     1f4:	80 91 c0 00 	lds	r24, 0x00C0
     1f8:	85 ff       	sbrs	r24, 5
     1fa:	fc cf       	rjmp	.-8      	; 0x1f4 <emptylib+0x46>
	UDR0 = tx_data ;
     1fc:	8f ef       	ldi	r24, 0xFF	; 255
     1fe:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     202:	80 91 c0 00 	lds	r24, 0x00C0
     206:	85 ff       	sbrs	r24, 5
     208:	fc cf       	rjmp	.-8      	; 0x202 <emptylib+0x54>
	UDR0 = tx_data ;
     20a:	81 e0       	ldi	r24, 0x01	; 1
     20c:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     210:	80 91 c0 00 	lds	r24, 0x00C0
     214:	85 ff       	sbrs	r24, 5
     216:	fc cf       	rjmp	.-8      	; 0x210 <emptylib+0x62>
	UDR0 = tx_data ;
     218:	10 92 c6 00 	sts	0x00C6, r1
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     21c:	80 91 c0 00 	lds	r24, 0x00C0
     220:	85 ff       	sbrs	r24, 5
     222:	fc cf       	rjmp	.-8      	; 0x21c <emptylib+0x6e>
	UDR0 = tx_data ;
     224:	83 e0       	ldi	r24, 0x03	; 3
     226:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     22a:	80 91 c0 00 	lds	r24, 0x00C0
     22e:	85 ff       	sbrs	r24, 5
     230:	fc cf       	rjmp	.-8      	; 0x22a <emptylib+0x7c>
	UDR0 = tx_data ;
     232:	8d e0       	ldi	r24, 0x0D	; 13
     234:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     238:	80 91 c0 00 	lds	r24, 0x00C0
     23c:	85 ff       	sbrs	r24, 5
     23e:	fc cf       	rjmp	.-8      	; 0x238 <emptylib+0x8a>
	UDR0 = tx_data ;
     240:	10 92 c6 00 	sts	0x00C6, r1
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     244:	80 91 c0 00 	lds	r24, 0x00C0
     248:	85 ff       	sbrs	r24, 5
     24a:	fc cf       	rjmp	.-8      	; 0x244 <emptylib+0x96>
	UDR0 = tx_data ;
     24c:	81 e1       	ldi	r24, 0x11	; 17
     24e:	80 93 c6 00 	sts	0x00C6, r24
     252:	84 ef       	ldi	r24, 0xF4	; 244
     254:	91 e0       	ldi	r25, 0x01	; 1
     256:	28 ec       	ldi	r18, 0xC8	; 200
     258:	30 e0       	ldi	r19, 0x00	; 0
     25a:	f9 01       	movw	r30, r18
     25c:	31 97       	sbiw	r30, 0x01	; 1
     25e:	f1 f7       	brne	.-4      	; 0x25c <emptylib+0xae>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     260:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     262:	d9 f7       	brne	.-10     	; 0x25a <emptylib+0xac>
{
	uart_trans(0xEF);uart_trans(0x01);uart_trans(0xFF);uart_trans(0xFF);uart_trans(0xFF);uart_trans(0xFF);
	uart_trans(0x01);uart_trans(0x00);uart_trans(0x03);uart_trans(0x0d);uart_trans(0x00);uart_trans(0x11);
	_delay_ms(50);
	
}
     264:	08 95       	ret

00000266 <genimg>:
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     266:	80 91 c0 00 	lds	r24, 0x00C0
     26a:	85 ff       	sbrs	r24, 5
     26c:	fc cf       	rjmp	.-8      	; 0x266 <genimg>
	UDR0 = tx_data ;
     26e:	8f ee       	ldi	r24, 0xEF	; 239
     270:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     274:	80 91 c0 00 	lds	r24, 0x00C0
     278:	85 ff       	sbrs	r24, 5
     27a:	fc cf       	rjmp	.-8      	; 0x274 <genimg+0xe>
	UDR0 = tx_data ;
     27c:	81 e0       	ldi	r24, 0x01	; 1
     27e:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     282:	80 91 c0 00 	lds	r24, 0x00C0
     286:	85 ff       	sbrs	r24, 5
     288:	fc cf       	rjmp	.-8      	; 0x282 <genimg+0x1c>
	UDR0 = tx_data ;
     28a:	8f ef       	ldi	r24, 0xFF	; 255
     28c:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     290:	80 91 c0 00 	lds	r24, 0x00C0
     294:	85 ff       	sbrs	r24, 5
     296:	fc cf       	rjmp	.-8      	; 0x290 <genimg+0x2a>
	UDR0 = tx_data ;
     298:	8f ef       	ldi	r24, 0xFF	; 255
     29a:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     29e:	80 91 c0 00 	lds	r24, 0x00C0
     2a2:	85 ff       	sbrs	r24, 5
     2a4:	fc cf       	rjmp	.-8      	; 0x29e <genimg+0x38>
	UDR0 = tx_data ;
     2a6:	8f ef       	ldi	r24, 0xFF	; 255
     2a8:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     2ac:	80 91 c0 00 	lds	r24, 0x00C0
     2b0:	85 ff       	sbrs	r24, 5
     2b2:	fc cf       	rjmp	.-8      	; 0x2ac <genimg+0x46>
	UDR0 = tx_data ;
     2b4:	8f ef       	ldi	r24, 0xFF	; 255
     2b6:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     2ba:	80 91 c0 00 	lds	r24, 0x00C0
     2be:	85 ff       	sbrs	r24, 5
     2c0:	fc cf       	rjmp	.-8      	; 0x2ba <genimg+0x54>
	UDR0 = tx_data ;
     2c2:	81 e0       	ldi	r24, 0x01	; 1
     2c4:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     2c8:	80 91 c0 00 	lds	r24, 0x00C0
     2cc:	85 ff       	sbrs	r24, 5
     2ce:	fc cf       	rjmp	.-8      	; 0x2c8 <genimg+0x62>
	UDR0 = tx_data ;
     2d0:	10 92 c6 00 	sts	0x00C6, r1
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     2d4:	80 91 c0 00 	lds	r24, 0x00C0
     2d8:	85 ff       	sbrs	r24, 5
     2da:	fc cf       	rjmp	.-8      	; 0x2d4 <genimg+0x6e>
	UDR0 = tx_data ;
     2dc:	83 e0       	ldi	r24, 0x03	; 3
     2de:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     2e2:	80 91 c0 00 	lds	r24, 0x00C0
     2e6:	85 ff       	sbrs	r24, 5
     2e8:	fc cf       	rjmp	.-8      	; 0x2e2 <genimg+0x7c>
	UDR0 = tx_data ;
     2ea:	81 e0       	ldi	r24, 0x01	; 1
     2ec:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     2f0:	80 91 c0 00 	lds	r24, 0x00C0
     2f4:	85 ff       	sbrs	r24, 5
     2f6:	fc cf       	rjmp	.-8      	; 0x2f0 <genimg+0x8a>
	UDR0 = tx_data ;
     2f8:	10 92 c6 00 	sts	0x00C6, r1
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     2fc:	80 91 c0 00 	lds	r24, 0x00C0
     300:	85 ff       	sbrs	r24, 5
     302:	fc cf       	rjmp	.-8      	; 0x2fc <genimg+0x96>
	UDR0 = tx_data ;
     304:	85 e0       	ldi	r24, 0x05	; 5
     306:	80 93 c6 00 	sts	0x00C6, r24
     30a:	84 ef       	ldi	r24, 0xF4	; 244
     30c:	91 e0       	ldi	r25, 0x01	; 1
     30e:	28 ec       	ldi	r18, 0xC8	; 200
     310:	30 e0       	ldi	r19, 0x00	; 0
     312:	f9 01       	movw	r30, r18
     314:	31 97       	sbiw	r30, 0x01	; 1
     316:	f1 f7       	brne	.-4      	; 0x314 <genimg+0xae>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     318:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     31a:	d9 f7       	brne	.-10     	; 0x312 <genimg+0xac>
void genimg()
{
	uart_trans(0xEF);uart_trans(0x01);uart_trans(0xFF);uart_trans(0xFF);uart_trans(0xFF);uart_trans(0xFF);
	uart_trans(0x01);uart_trans(0x00);uart_trans(0x03);uart_trans(0x01);uart_trans(0x00);uart_trans(0x05);
	_delay_ms(50);
}
     31c:	08 95       	ret

0000031e <genchar1>:
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     31e:	80 91 c0 00 	lds	r24, 0x00C0
     322:	85 ff       	sbrs	r24, 5
     324:	fc cf       	rjmp	.-8      	; 0x31e <genchar1>
	UDR0 = tx_data ;
     326:	8f ee       	ldi	r24, 0xEF	; 239
     328:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     32c:	80 91 c0 00 	lds	r24, 0x00C0
     330:	85 ff       	sbrs	r24, 5
     332:	fc cf       	rjmp	.-8      	; 0x32c <genchar1+0xe>
	UDR0 = tx_data ;
     334:	81 e0       	ldi	r24, 0x01	; 1
     336:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     33a:	80 91 c0 00 	lds	r24, 0x00C0
     33e:	85 ff       	sbrs	r24, 5
     340:	fc cf       	rjmp	.-8      	; 0x33a <genchar1+0x1c>
	UDR0 = tx_data ;
     342:	8f ef       	ldi	r24, 0xFF	; 255
     344:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     348:	80 91 c0 00 	lds	r24, 0x00C0
     34c:	85 ff       	sbrs	r24, 5
     34e:	fc cf       	rjmp	.-8      	; 0x348 <genchar1+0x2a>
	UDR0 = tx_data ;
     350:	8f ef       	ldi	r24, 0xFF	; 255
     352:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     356:	80 91 c0 00 	lds	r24, 0x00C0
     35a:	85 ff       	sbrs	r24, 5
     35c:	fc cf       	rjmp	.-8      	; 0x356 <genchar1+0x38>
	UDR0 = tx_data ;
     35e:	8f ef       	ldi	r24, 0xFF	; 255
     360:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     364:	80 91 c0 00 	lds	r24, 0x00C0
     368:	85 ff       	sbrs	r24, 5
     36a:	fc cf       	rjmp	.-8      	; 0x364 <genchar1+0x46>
	UDR0 = tx_data ;
     36c:	8f ef       	ldi	r24, 0xFF	; 255
     36e:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     372:	80 91 c0 00 	lds	r24, 0x00C0
     376:	85 ff       	sbrs	r24, 5
     378:	fc cf       	rjmp	.-8      	; 0x372 <genchar1+0x54>
	UDR0 = tx_data ;
     37a:	81 e0       	ldi	r24, 0x01	; 1
     37c:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     380:	80 91 c0 00 	lds	r24, 0x00C0
     384:	85 ff       	sbrs	r24, 5
     386:	fc cf       	rjmp	.-8      	; 0x380 <genchar1+0x62>
	UDR0 = tx_data ;
     388:	10 92 c6 00 	sts	0x00C6, r1
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     38c:	80 91 c0 00 	lds	r24, 0x00C0
     390:	85 ff       	sbrs	r24, 5
     392:	fc cf       	rjmp	.-8      	; 0x38c <genchar1+0x6e>
	UDR0 = tx_data ;
     394:	84 e0       	ldi	r24, 0x04	; 4
     396:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     39a:	80 91 c0 00 	lds	r24, 0x00C0
     39e:	85 ff       	sbrs	r24, 5
     3a0:	fc cf       	rjmp	.-8      	; 0x39a <genchar1+0x7c>
	UDR0 = tx_data ;
     3a2:	82 e0       	ldi	r24, 0x02	; 2
     3a4:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     3a8:	80 91 c0 00 	lds	r24, 0x00C0
     3ac:	85 ff       	sbrs	r24, 5
     3ae:	fc cf       	rjmp	.-8      	; 0x3a8 <genchar1+0x8a>
	UDR0 = tx_data ;
     3b0:	81 e0       	ldi	r24, 0x01	; 1
     3b2:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     3b6:	80 91 c0 00 	lds	r24, 0x00C0
     3ba:	85 ff       	sbrs	r24, 5
     3bc:	fc cf       	rjmp	.-8      	; 0x3b6 <genchar1+0x98>
	UDR0 = tx_data ;
     3be:	10 92 c6 00 	sts	0x00C6, r1
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     3c2:	80 91 c0 00 	lds	r24, 0x00C0
     3c6:	85 ff       	sbrs	r24, 5
     3c8:	fc cf       	rjmp	.-8      	; 0x3c2 <genchar1+0xa4>
	UDR0 = tx_data ;
     3ca:	88 e0       	ldi	r24, 0x08	; 8
     3cc:	80 93 c6 00 	sts	0x00C6, r24
     3d0:	84 ef       	ldi	r24, 0xF4	; 244
     3d2:	91 e0       	ldi	r25, 0x01	; 1
     3d4:	28 ec       	ldi	r18, 0xC8	; 200
     3d6:	30 e0       	ldi	r19, 0x00	; 0
     3d8:	f9 01       	movw	r30, r18
     3da:	31 97       	sbiw	r30, 0x01	; 1
     3dc:	f1 f7       	brne	.-4      	; 0x3da <genchar1+0xbc>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3de:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3e0:	d9 f7       	brne	.-10     	; 0x3d8 <genchar1+0xba>
void genchar1()
{
	uart_trans(0xEF);uart_trans(0x01);uart_trans(0xFF);uart_trans(0xFF);uart_trans(0xFF);uart_trans(0xFF);
	uart_trans(0x01);uart_trans(0x00);uart_trans(0x04);uart_trans(0x02);uart_trans(0x01);uart_trans(0x00);uart_trans(0x08);
	 _delay_ms(50); 
}
     3e2:	08 95       	ret

000003e4 <genchar2>:
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     3e4:	80 91 c0 00 	lds	r24, 0x00C0
     3e8:	85 ff       	sbrs	r24, 5
     3ea:	fc cf       	rjmp	.-8      	; 0x3e4 <genchar2>
	UDR0 = tx_data ;
     3ec:	8f ee       	ldi	r24, 0xEF	; 239
     3ee:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     3f2:	80 91 c0 00 	lds	r24, 0x00C0
     3f6:	85 ff       	sbrs	r24, 5
     3f8:	fc cf       	rjmp	.-8      	; 0x3f2 <genchar2+0xe>
	UDR0 = tx_data ;
     3fa:	81 e0       	ldi	r24, 0x01	; 1
     3fc:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     400:	80 91 c0 00 	lds	r24, 0x00C0
     404:	85 ff       	sbrs	r24, 5
     406:	fc cf       	rjmp	.-8      	; 0x400 <genchar2+0x1c>
	UDR0 = tx_data ;
     408:	8f ef       	ldi	r24, 0xFF	; 255
     40a:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     40e:	80 91 c0 00 	lds	r24, 0x00C0
     412:	85 ff       	sbrs	r24, 5
     414:	fc cf       	rjmp	.-8      	; 0x40e <genchar2+0x2a>
	UDR0 = tx_data ;
     416:	8f ef       	ldi	r24, 0xFF	; 255
     418:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     41c:	80 91 c0 00 	lds	r24, 0x00C0
     420:	85 ff       	sbrs	r24, 5
     422:	fc cf       	rjmp	.-8      	; 0x41c <genchar2+0x38>
	UDR0 = tx_data ;
     424:	8f ef       	ldi	r24, 0xFF	; 255
     426:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     42a:	80 91 c0 00 	lds	r24, 0x00C0
     42e:	85 ff       	sbrs	r24, 5
     430:	fc cf       	rjmp	.-8      	; 0x42a <genchar2+0x46>
	UDR0 = tx_data ;
     432:	8f ef       	ldi	r24, 0xFF	; 255
     434:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     438:	80 91 c0 00 	lds	r24, 0x00C0
     43c:	85 ff       	sbrs	r24, 5
     43e:	fc cf       	rjmp	.-8      	; 0x438 <genchar2+0x54>
	UDR0 = tx_data ;
     440:	81 e0       	ldi	r24, 0x01	; 1
     442:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     446:	80 91 c0 00 	lds	r24, 0x00C0
     44a:	85 ff       	sbrs	r24, 5
     44c:	fc cf       	rjmp	.-8      	; 0x446 <genchar2+0x62>
	UDR0 = tx_data ;
     44e:	10 92 c6 00 	sts	0x00C6, r1
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     452:	80 91 c0 00 	lds	r24, 0x00C0
     456:	85 ff       	sbrs	r24, 5
     458:	fc cf       	rjmp	.-8      	; 0x452 <genchar2+0x6e>
	UDR0 = tx_data ;
     45a:	84 e0       	ldi	r24, 0x04	; 4
     45c:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     460:	80 91 c0 00 	lds	r24, 0x00C0
     464:	85 ff       	sbrs	r24, 5
     466:	fc cf       	rjmp	.-8      	; 0x460 <genchar2+0x7c>
	UDR0 = tx_data ;
     468:	82 e0       	ldi	r24, 0x02	; 2
     46a:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     46e:	80 91 c0 00 	lds	r24, 0x00C0
     472:	85 ff       	sbrs	r24, 5
     474:	fc cf       	rjmp	.-8      	; 0x46e <genchar2+0x8a>
	UDR0 = tx_data ;
     476:	82 e0       	ldi	r24, 0x02	; 2
     478:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     47c:	80 91 c0 00 	lds	r24, 0x00C0
     480:	85 ff       	sbrs	r24, 5
     482:	fc cf       	rjmp	.-8      	; 0x47c <genchar2+0x98>
	UDR0 = tx_data ;
     484:	10 92 c6 00 	sts	0x00C6, r1
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     488:	80 91 c0 00 	lds	r24, 0x00C0
     48c:	85 ff       	sbrs	r24, 5
     48e:	fc cf       	rjmp	.-8      	; 0x488 <genchar2+0xa4>
	UDR0 = tx_data ;
     490:	89 e0       	ldi	r24, 0x09	; 9
     492:	80 93 c6 00 	sts	0x00C6, r24
     496:	84 ef       	ldi	r24, 0xF4	; 244
     498:	91 e0       	ldi	r25, 0x01	; 1
     49a:	28 ec       	ldi	r18, 0xC8	; 200
     49c:	30 e0       	ldi	r19, 0x00	; 0
     49e:	f9 01       	movw	r30, r18
     4a0:	31 97       	sbiw	r30, 0x01	; 1
     4a2:	f1 f7       	brne	.-4      	; 0x4a0 <genchar2+0xbc>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4a4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4a6:	d9 f7       	brne	.-10     	; 0x49e <genchar2+0xba>
{
	uart_trans(0xEF);uart_trans(0x01);uart_trans(0xFF);uart_trans(0xFF);uart_trans(0xFF);uart_trans(0xFF);
	uart_trans(0x01);uart_trans(0x00);uart_trans(0x04);uart_trans(0x02);uart_trans(0x02);uart_trans(0x00);uart_trans(0x09);
	_delay_ms(50);
	
}
     4a8:	08 95       	ret

000004aa <gentemp>:
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     4aa:	80 91 c0 00 	lds	r24, 0x00C0
     4ae:	85 ff       	sbrs	r24, 5
     4b0:	fc cf       	rjmp	.-8      	; 0x4aa <gentemp>
	UDR0 = tx_data ;
     4b2:	8f ee       	ldi	r24, 0xEF	; 239
     4b4:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     4b8:	80 91 c0 00 	lds	r24, 0x00C0
     4bc:	85 ff       	sbrs	r24, 5
     4be:	fc cf       	rjmp	.-8      	; 0x4b8 <gentemp+0xe>
	UDR0 = tx_data ;
     4c0:	81 e0       	ldi	r24, 0x01	; 1
     4c2:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     4c6:	80 91 c0 00 	lds	r24, 0x00C0
     4ca:	85 ff       	sbrs	r24, 5
     4cc:	fc cf       	rjmp	.-8      	; 0x4c6 <gentemp+0x1c>
	UDR0 = tx_data ;
     4ce:	8f ef       	ldi	r24, 0xFF	; 255
     4d0:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     4d4:	80 91 c0 00 	lds	r24, 0x00C0
     4d8:	85 ff       	sbrs	r24, 5
     4da:	fc cf       	rjmp	.-8      	; 0x4d4 <gentemp+0x2a>
	UDR0 = tx_data ;
     4dc:	8f ef       	ldi	r24, 0xFF	; 255
     4de:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     4e2:	80 91 c0 00 	lds	r24, 0x00C0
     4e6:	85 ff       	sbrs	r24, 5
     4e8:	fc cf       	rjmp	.-8      	; 0x4e2 <gentemp+0x38>
	UDR0 = tx_data ;
     4ea:	8f ef       	ldi	r24, 0xFF	; 255
     4ec:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     4f0:	80 91 c0 00 	lds	r24, 0x00C0
     4f4:	85 ff       	sbrs	r24, 5
     4f6:	fc cf       	rjmp	.-8      	; 0x4f0 <gentemp+0x46>
	UDR0 = tx_data ;
     4f8:	8f ef       	ldi	r24, 0xFF	; 255
     4fa:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     4fe:	80 91 c0 00 	lds	r24, 0x00C0
     502:	85 ff       	sbrs	r24, 5
     504:	fc cf       	rjmp	.-8      	; 0x4fe <gentemp+0x54>
	UDR0 = tx_data ;
     506:	81 e0       	ldi	r24, 0x01	; 1
     508:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     50c:	80 91 c0 00 	lds	r24, 0x00C0
     510:	85 ff       	sbrs	r24, 5
     512:	fc cf       	rjmp	.-8      	; 0x50c <gentemp+0x62>
	UDR0 = tx_data ;
     514:	10 92 c6 00 	sts	0x00C6, r1
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     518:	80 91 c0 00 	lds	r24, 0x00C0
     51c:	85 ff       	sbrs	r24, 5
     51e:	fc cf       	rjmp	.-8      	; 0x518 <gentemp+0x6e>
	UDR0 = tx_data ;
     520:	83 e0       	ldi	r24, 0x03	; 3
     522:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     526:	80 91 c0 00 	lds	r24, 0x00C0
     52a:	85 ff       	sbrs	r24, 5
     52c:	fc cf       	rjmp	.-8      	; 0x526 <gentemp+0x7c>
	UDR0 = tx_data ;
     52e:	85 e0       	ldi	r24, 0x05	; 5
     530:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     534:	80 91 c0 00 	lds	r24, 0x00C0
     538:	85 ff       	sbrs	r24, 5
     53a:	fc cf       	rjmp	.-8      	; 0x534 <gentemp+0x8a>
	UDR0 = tx_data ;
     53c:	10 92 c6 00 	sts	0x00C6, r1
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     540:	80 91 c0 00 	lds	r24, 0x00C0
     544:	85 ff       	sbrs	r24, 5
     546:	fc cf       	rjmp	.-8      	; 0x540 <gentemp+0x96>
	UDR0 = tx_data ;
     548:	89 e0       	ldi	r24, 0x09	; 9
     54a:	80 93 c6 00 	sts	0x00C6, r24
     54e:	84 ef       	ldi	r24, 0xF4	; 244
     550:	91 e0       	ldi	r25, 0x01	; 1
     552:	28 ec       	ldi	r18, 0xC8	; 200
     554:	30 e0       	ldi	r19, 0x00	; 0
     556:	f9 01       	movw	r30, r18
     558:	31 97       	sbiw	r30, 0x01	; 1
     55a:	f1 f7       	brne	.-4      	; 0x558 <gentemp+0xae>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     55c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     55e:	d9 f7       	brne	.-10     	; 0x556 <gentemp+0xac>
{
	uart_trans(0xEF);uart_trans(0x01);uart_trans(0xFF);uart_trans(0xFF);uart_trans(0xFF);uart_trans(0xFF);
	uart_trans(0x01);uart_trans(0x00);uart_trans(0x03);uart_trans(0x05);uart_trans(0x00);uart_trans(0x09);
	_delay_ms(50);
	 
}
     560:	08 95       	ret

00000562 <searchfing>:
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     562:	80 91 c0 00 	lds	r24, 0x00C0
     566:	85 ff       	sbrs	r24, 5
     568:	fc cf       	rjmp	.-8      	; 0x562 <searchfing>
	UDR0 = tx_data ;
     56a:	8f ee       	ldi	r24, 0xEF	; 239
     56c:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     570:	80 91 c0 00 	lds	r24, 0x00C0
     574:	85 ff       	sbrs	r24, 5
     576:	fc cf       	rjmp	.-8      	; 0x570 <searchfing+0xe>
	UDR0 = tx_data ;
     578:	81 e0       	ldi	r24, 0x01	; 1
     57a:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     57e:	80 91 c0 00 	lds	r24, 0x00C0
     582:	85 ff       	sbrs	r24, 5
     584:	fc cf       	rjmp	.-8      	; 0x57e <searchfing+0x1c>
	UDR0 = tx_data ;
     586:	8f ef       	ldi	r24, 0xFF	; 255
     588:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     58c:	80 91 c0 00 	lds	r24, 0x00C0
     590:	85 ff       	sbrs	r24, 5
     592:	fc cf       	rjmp	.-8      	; 0x58c <searchfing+0x2a>
	UDR0 = tx_data ;
     594:	8f ef       	ldi	r24, 0xFF	; 255
     596:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     59a:	80 91 c0 00 	lds	r24, 0x00C0
     59e:	85 ff       	sbrs	r24, 5
     5a0:	fc cf       	rjmp	.-8      	; 0x59a <searchfing+0x38>
	UDR0 = tx_data ;
     5a2:	8f ef       	ldi	r24, 0xFF	; 255
     5a4:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     5a8:	80 91 c0 00 	lds	r24, 0x00C0
     5ac:	85 ff       	sbrs	r24, 5
     5ae:	fc cf       	rjmp	.-8      	; 0x5a8 <searchfing+0x46>
	UDR0 = tx_data ;
     5b0:	8f ef       	ldi	r24, 0xFF	; 255
     5b2:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     5b6:	80 91 c0 00 	lds	r24, 0x00C0
     5ba:	85 ff       	sbrs	r24, 5
     5bc:	fc cf       	rjmp	.-8      	; 0x5b6 <searchfing+0x54>
	UDR0 = tx_data ;
     5be:	81 e0       	ldi	r24, 0x01	; 1
     5c0:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     5c4:	80 91 c0 00 	lds	r24, 0x00C0
     5c8:	85 ff       	sbrs	r24, 5
     5ca:	fc cf       	rjmp	.-8      	; 0x5c4 <searchfing+0x62>
	UDR0 = tx_data ;
     5cc:	10 92 c6 00 	sts	0x00C6, r1
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     5d0:	80 91 c0 00 	lds	r24, 0x00C0
     5d4:	85 ff       	sbrs	r24, 5
     5d6:	fc cf       	rjmp	.-8      	; 0x5d0 <searchfing+0x6e>
	UDR0 = tx_data ;
     5d8:	88 e0       	ldi	r24, 0x08	; 8
     5da:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     5de:	80 91 c0 00 	lds	r24, 0x00C0
     5e2:	85 ff       	sbrs	r24, 5
     5e4:	fc cf       	rjmp	.-8      	; 0x5de <searchfing+0x7c>
	UDR0 = tx_data ;
     5e6:	84 e0       	ldi	r24, 0x04	; 4
     5e8:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     5ec:	80 91 c0 00 	lds	r24, 0x00C0
     5f0:	85 ff       	sbrs	r24, 5
     5f2:	fc cf       	rjmp	.-8      	; 0x5ec <searchfing+0x8a>
	UDR0 = tx_data ;
     5f4:	81 e0       	ldi	r24, 0x01	; 1
     5f6:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     5fa:	80 91 c0 00 	lds	r24, 0x00C0
     5fe:	85 ff       	sbrs	r24, 5
     600:	fc cf       	rjmp	.-8      	; 0x5fa <searchfing+0x98>
	UDR0 = tx_data ;
     602:	10 92 c6 00 	sts	0x00C6, r1
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     606:	80 91 c0 00 	lds	r24, 0x00C0
     60a:	85 ff       	sbrs	r24, 5
     60c:	fc cf       	rjmp	.-8      	; 0x606 <searchfing+0xa4>
	UDR0 = tx_data ;
     60e:	10 92 c6 00 	sts	0x00C6, r1
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     612:	80 91 c0 00 	lds	r24, 0x00C0
     616:	85 ff       	sbrs	r24, 5
     618:	fc cf       	rjmp	.-8      	; 0x612 <searchfing+0xb0>
	UDR0 = tx_data ;
     61a:	10 92 c6 00 	sts	0x00C6, r1
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     61e:	80 91 c0 00 	lds	r24, 0x00C0
     622:	85 ff       	sbrs	r24, 5
     624:	fc cf       	rjmp	.-8      	; 0x61e <searchfing+0xbc>
	UDR0 = tx_data ;
     626:	8f e0       	ldi	r24, 0x0F	; 15
     628:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     62c:	80 91 c0 00 	lds	r24, 0x00C0
     630:	85 ff       	sbrs	r24, 5
     632:	fc cf       	rjmp	.-8      	; 0x62c <searchfing+0xca>
	UDR0 = tx_data ;
     634:	10 92 c6 00 	sts	0x00C6, r1
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     638:	80 91 c0 00 	lds	r24, 0x00C0
     63c:	85 ff       	sbrs	r24, 5
     63e:	fc cf       	rjmp	.-8      	; 0x638 <searchfing+0xd6>
	UDR0 = tx_data ;
     640:	8d e1       	ldi	r24, 0x1D	; 29
     642:	80 93 c6 00 	sts	0x00C6, r24
     646:	84 ef       	ldi	r24, 0xF4	; 244
     648:	91 e0       	ldi	r25, 0x01	; 1
     64a:	28 ec       	ldi	r18, 0xC8	; 200
     64c:	30 e0       	ldi	r19, 0x00	; 0
     64e:	f9 01       	movw	r30, r18
     650:	31 97       	sbiw	r30, 0x01	; 1
     652:	f1 f7       	brne	.-4      	; 0x650 <searchfing+0xee>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     654:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     656:	d9 f7       	brne	.-10     	; 0x64e <searchfing+0xec>
{
	uart_trans(0xEF);uart_trans(0x01);uart_trans(0xFF);uart_trans(0xFF);uart_trans(0xFF);uart_trans(0xFF);
	uart_trans(0x01);uart_trans(0x00);uart_trans(0x08);uart_trans(0x04);uart_trans(0x01);uart_trans(0x00);uart_trans(0x00);uart_trans(0x00);uart_trans(0x0F);uart_trans(0x00);uart_trans(0x1d);
	_delay_ms(50);
	
}
     658:	08 95       	ret

0000065a <deletetemp>:
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     65a:	80 91 c0 00 	lds	r24, 0x00C0
     65e:	85 ff       	sbrs	r24, 5
     660:	fc cf       	rjmp	.-8      	; 0x65a <deletetemp>
	UDR0 = tx_data ;
     662:	8f ee       	ldi	r24, 0xEF	; 239
     664:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     668:	80 91 c0 00 	lds	r24, 0x00C0
     66c:	85 ff       	sbrs	r24, 5
     66e:	fc cf       	rjmp	.-8      	; 0x668 <deletetemp+0xe>
	UDR0 = tx_data ;
     670:	81 e0       	ldi	r24, 0x01	; 1
     672:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     676:	80 91 c0 00 	lds	r24, 0x00C0
     67a:	85 ff       	sbrs	r24, 5
     67c:	fc cf       	rjmp	.-8      	; 0x676 <deletetemp+0x1c>
	UDR0 = tx_data ;
     67e:	8f ef       	ldi	r24, 0xFF	; 255
     680:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     684:	80 91 c0 00 	lds	r24, 0x00C0
     688:	85 ff       	sbrs	r24, 5
     68a:	fc cf       	rjmp	.-8      	; 0x684 <deletetemp+0x2a>
	UDR0 = tx_data ;
     68c:	8f ef       	ldi	r24, 0xFF	; 255
     68e:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     692:	80 91 c0 00 	lds	r24, 0x00C0
     696:	85 ff       	sbrs	r24, 5
     698:	fc cf       	rjmp	.-8      	; 0x692 <deletetemp+0x38>
	UDR0 = tx_data ;
     69a:	8f ef       	ldi	r24, 0xFF	; 255
     69c:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     6a0:	80 91 c0 00 	lds	r24, 0x00C0
     6a4:	85 ff       	sbrs	r24, 5
     6a6:	fc cf       	rjmp	.-8      	; 0x6a0 <deletetemp+0x46>
	UDR0 = tx_data ;
     6a8:	8f ef       	ldi	r24, 0xFF	; 255
     6aa:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     6ae:	80 91 c0 00 	lds	r24, 0x00C0
     6b2:	85 ff       	sbrs	r24, 5
     6b4:	fc cf       	rjmp	.-8      	; 0x6ae <deletetemp+0x54>
	UDR0 = tx_data ;
     6b6:	81 e0       	ldi	r24, 0x01	; 1
     6b8:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     6bc:	80 91 c0 00 	lds	r24, 0x00C0
     6c0:	85 ff       	sbrs	r24, 5
     6c2:	fc cf       	rjmp	.-8      	; 0x6bc <deletetemp+0x62>
	UDR0 = tx_data ;
     6c4:	10 92 c6 00 	sts	0x00C6, r1
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     6c8:	80 91 c0 00 	lds	r24, 0x00C0
     6cc:	85 ff       	sbrs	r24, 5
     6ce:	fc cf       	rjmp	.-8      	; 0x6c8 <deletetemp+0x6e>
	UDR0 = tx_data ;
     6d0:	87 e0       	ldi	r24, 0x07	; 7
     6d2:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     6d6:	80 91 c0 00 	lds	r24, 0x00C0
     6da:	85 ff       	sbrs	r24, 5
     6dc:	fc cf       	rjmp	.-8      	; 0x6d6 <deletetemp+0x7c>
	UDR0 = tx_data ;
     6de:	8c e0       	ldi	r24, 0x0C	; 12
     6e0:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     6e4:	80 91 c0 00 	lds	r24, 0x00C0
     6e8:	85 ff       	sbrs	r24, 5
     6ea:	fc cf       	rjmp	.-8      	; 0x6e4 <deletetemp+0x8a>
	UDR0 = tx_data ;
     6ec:	10 92 c6 00 	sts	0x00C6, r1
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     6f0:	80 91 c0 00 	lds	r24, 0x00C0
     6f4:	85 ff       	sbrs	r24, 5
     6f6:	fc cf       	rjmp	.-8      	; 0x6f0 <deletetemp+0x96>
	UDR0 = tx_data ;
     6f8:	83 e0       	ldi	r24, 0x03	; 3
     6fa:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     6fe:	80 91 c0 00 	lds	r24, 0x00C0
     702:	85 ff       	sbrs	r24, 5
     704:	fc cf       	rjmp	.-8      	; 0x6fe <deletetemp+0xa4>
	UDR0 = tx_data ;
     706:	10 92 c6 00 	sts	0x00C6, r1
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     70a:	80 91 c0 00 	lds	r24, 0x00C0
     70e:	85 ff       	sbrs	r24, 5
     710:	fc cf       	rjmp	.-8      	; 0x70a <deletetemp+0xb0>
	UDR0 = tx_data ;
     712:	81 e0       	ldi	r24, 0x01	; 1
     714:	80 93 c6 00 	sts	0x00C6, r24
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     718:	80 91 c0 00 	lds	r24, 0x00C0
     71c:	85 ff       	sbrs	r24, 5
     71e:	fc cf       	rjmp	.-8      	; 0x718 <deletetemp+0xbe>
	UDR0 = tx_data ;
     720:	10 92 c6 00 	sts	0x00C6, r1
}


uart_trans(char tx_data)
{
	while (( UCSR0A & (1 << UDRE0 )) == 0);
     724:	80 91 c0 00 	lds	r24, 0x00C0
     728:	85 ff       	sbrs	r24, 5
     72a:	fc cf       	rjmp	.-8      	; 0x724 <deletetemp+0xca>
	UDR0 = tx_data ;
     72c:	88 e1       	ldi	r24, 0x18	; 24
     72e:	80 93 c6 00 	sts	0x00C6, r24
     732:	84 ef       	ldi	r24, 0xF4	; 244
     734:	91 e0       	ldi	r25, 0x01	; 1
     736:	28 ec       	ldi	r18, 0xC8	; 200
     738:	30 e0       	ldi	r19, 0x00	; 0
     73a:	f9 01       	movw	r30, r18
     73c:	31 97       	sbiw	r30, 0x01	; 1
     73e:	f1 f7       	brne	.-4      	; 0x73c <deletetemp+0xe2>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     740:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     742:	d9 f7       	brne	.-10     	; 0x73a <deletetemp+0xe0>
void deletetemp()
{
	uart_trans(0xEF);uart_trans(0x01);uart_trans(0xFF);uart_trans(0xFF);uart_trans(0xFF);uart_trans(0xFF);
	uart_trans(0x01);uart_trans(0x00);uart_trans(0x07);uart_trans(0x0c);uart_trans(0x00);uart_trans(0x03);uart_trans(0x00);uart_trans(0x01);uart_trans(0x00);;uart_trans(0x18);
	_delay_ms(50);	
}
     744:	08 95       	ret

00000746 <cmd>:



void cmd(unsigned char c)
{
	PORTC=c;
     746:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
     748:	80 e4       	ldi	r24, 0x40	; 64
     74a:	8b b9       	out	0x0b, r24	; 11
     74c:	80 ed       	ldi	r24, 0xD0	; 208
     74e:	97 e0       	ldi	r25, 0x07	; 7
     750:	01 97       	sbiw	r24, 0x01	; 1
     752:	f1 f7       	brne	.-4      	; 0x750 <cmd+0xa>
	_delay_ms(1);
	PORTD=0x00;
     754:	1b b8       	out	0x0b, r1	; 11
}
     756:	08 95       	ret

00000758 <lcdinit>:
#include "util/delay.h"


lcdinit()
{
	cmd(0x38);
     758:	88 e3       	ldi	r24, 0x38	; 56
     75a:	90 e0       	ldi	r25, 0x00	; 0
     75c:	0e 94 a3 03 	call	0x746	; 0x746 <cmd>
	cmd(0x0C);
     760:	8c e0       	ldi	r24, 0x0C	; 12
     762:	90 e0       	ldi	r25, 0x00	; 0
     764:	0e 94 a3 03 	call	0x746	; 0x746 <cmd>
	cmd(0x01);
     768:	81 e0       	ldi	r24, 0x01	; 1
     76a:	90 e0       	ldi	r25, 0x00	; 0
     76c:	0e 94 a3 03 	call	0x746	; 0x746 <cmd>
	cmd(0x80);
     770:	80 e8       	ldi	r24, 0x80	; 128
     772:	90 e0       	ldi	r25, 0x00	; 0
     774:	0e 94 a3 03 	call	0x746	; 0x746 <cmd>
     778:	80 e1       	ldi	r24, 0x10	; 16
     77a:	97 e2       	ldi	r25, 0x27	; 39
     77c:	28 ec       	ldi	r18, 0xC8	; 200
     77e:	30 e0       	ldi	r19, 0x00	; 0
     780:	f9 01       	movw	r30, r18
     782:	31 97       	sbiw	r30, 0x01	; 1
     784:	f1 f7       	brne	.-4      	; 0x782 <lcdinit+0x2a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     786:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     788:	d9 f7       	brne	.-10     	; 0x780 <lcdinit+0x28>
	
	_delay_ms(1000);
}
     78a:	08 95       	ret

0000078c <data>:
	PORTD=0x00;
}

void data(unsigned	char c)
{
	PORTC=c;
     78c:	88 b9       	out	0x08, r24	; 8
     78e:	20 ed       	ldi	r18, 0xD0	; 208
     790:	37 e0       	ldi	r19, 0x07	; 7
     792:	c9 01       	movw	r24, r18
     794:	01 97       	sbiw	r24, 0x01	; 1
     796:	f1 f7       	brne	.-4      	; 0x794 <data+0x8>
	_delay_ms(1);
	PORTD=0xC0;
     798:	80 ec       	ldi	r24, 0xC0	; 192
     79a:	8b b9       	out	0x0b, r24	; 11
     79c:	c9 01       	movw	r24, r18
     79e:	01 97       	sbiw	r24, 0x01	; 1
     7a0:	f1 f7       	brne	.-4      	; 0x79e <data+0x12>
	_delay_ms(1);
	PORTD=0x80;
     7a2:	80 e8       	ldi	r24, 0x80	; 128
     7a4:	8b b9       	out	0x0b, r24	; 11
     7a6:	c9 01       	movw	r24, r18
     7a8:	01 97       	sbiw	r24, 0x01	; 1
     7aa:	f1 f7       	brne	.-4      	; 0x7a8 <data+0x1c>



void cmd(unsigned char c)
{
	PORTC=c;
     7ac:	86 e0       	ldi	r24, 0x06	; 6
     7ae:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
     7b0:	80 e4       	ldi	r24, 0x40	; 64
     7b2:	8b b9       	out	0x0b, r24	; 11
     7b4:	c9 01       	movw	r24, r18
     7b6:	01 97       	sbiw	r24, 0x01	; 1
     7b8:	f1 f7       	brne	.-4      	; 0x7b6 <data+0x2a>
	_delay_ms(1);
	PORTD=0x00;
     7ba:	1b b8       	out	0x0b, r1	; 11
	PORTD=0xC0;
	_delay_ms(1);
	PORTD=0x80;
	_delay_ms(1);
	cmd(0x06);
}
     7bc:	08 95       	ret

000007be <string>:

void string(char *p)
{
     7be:	cf 93       	push	r28
     7c0:	df 93       	push	r29
     7c2:	ec 01       	movw	r28, r24
     7c4:	03 c0       	rjmp	.+6      	; 0x7cc <string+0xe>
	while(*p) data(*p++);
     7c6:	21 96       	adiw	r28, 0x01	; 1
     7c8:	0e 94 c6 03 	call	0x78c	; 0x78c <data>
     7cc:	88 81       	ld	r24, Y
     7ce:	88 23       	and	r24, r24
     7d0:	d1 f7       	brne	.-12     	; 0x7c6 <string+0x8>
	
}
     7d2:	df 91       	pop	r29
     7d4:	cf 91       	pop	r28
     7d6:	08 95       	ret

000007d8 <get_adc>:



uint8_t get_adc(unsigned char ch)
{
	ADMUX=0x60|ch;
     7d8:	80 66       	ori	r24, 0x60	; 96
     7da:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA=0xC7;
     7de:	87 ec       	ldi	r24, 0xC7	; 199
     7e0:	80 93 7a 00 	sts	0x007A, r24
     7e4:	80 e2       	ldi	r24, 0x20	; 32
     7e6:	9e e4       	ldi	r25, 0x4E	; 78
     7e8:	01 97       	sbiw	r24, 0x01	; 1
     7ea:	f1 f7       	brne	.-4      	; 0x7e8 <get_adc+0x10>
	while(!ADIF);
	_delay_ms(10);
	return(ADCH);
     7ec:	80 91 79 00 	lds	r24, 0x0079
}
     7f0:	08 95       	ret

000007f2 <get_touch>:

unsigned char get_touch()
{
     7f2:	ff 92       	push	r15
     7f4:	0f 93       	push	r16
     7f6:	cf 93       	push	r28
     7f8:	df 93       	push	r29
        unsigned char x_touch,y_touch;
		DDRA|= 0B01010000;
     7fa:	81 b1       	in	r24, 0x01	; 1
     7fc:	80 65       	ori	r24, 0x50	; 80
     7fe:	81 b9       	out	0x01, r24	; 1
		DDRA&=~0b10100000;
     800:	81 b1       	in	r24, 0x01	; 1
     802:	8f 75       	andi	r24, 0x5F	; 95
     804:	81 b9       	out	0x01, r24	; 1
		PORTA|=0B00010000;
     806:	14 9a       	sbi	0x02, 4	; 2
		PORTA&=~0b01000000;
     808:	16 98       	cbi	0x02, 6	; 2
     80a:	20 e2       	ldi	r18, 0x20	; 32
     80c:	3e e4       	ldi	r19, 0x4E	; 78
     80e:	c9 01       	movw	r24, r18
     810:	01 97       	sbiw	r24, 0x01	; 1
     812:	f1 f7       	brne	.-4      	; 0x810 <get_touch+0x1e>



uint8_t get_adc(unsigned char ch)
{
	ADMUX=0x60|ch;
     814:	85 e6       	ldi	r24, 0x65	; 101
     816:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA=0xC7;
     81a:	87 ec       	ldi	r24, 0xC7	; 199
     81c:	80 93 7a 00 	sts	0x007A, r24
     820:	c9 01       	movw	r24, r18
     822:	01 97       	sbiw	r24, 0x01	; 1
     824:	f1 f7       	brne	.-4      	; 0x822 <get_touch+0x30>
	while(!ADIF);
	_delay_ms(10);
	return(ADCH);
     826:	40 91 79 00 	lds	r20, 0x0079
     82a:	88 ee       	ldi	r24, 0xE8	; 232
     82c:	93 e0       	ldi	r25, 0x03	; 3
     82e:	28 ec       	ldi	r18, 0xC8	; 200
     830:	30 e0       	ldi	r19, 0x00	; 0
     832:	f9 01       	movw	r30, r18
     834:	31 97       	sbiw	r30, 0x01	; 1
     836:	f1 f7       	brne	.-4      	; 0x834 <get_touch+0x42>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     838:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     83a:	d9 f7       	brne	.-10     	; 0x832 <get_touch+0x40>
		_delay_ms(10);

		x_touch=get_adc(0x05);
		_delay_ms(100);

		DDRA|=0B10100000;
     83c:	81 b1       	in	r24, 0x01	; 1
     83e:	80 6a       	ori	r24, 0xA0	; 160
     840:	81 b9       	out	0x01, r24	; 1
		DDRA&=~0b01010000;
     842:	81 b1       	in	r24, 0x01	; 1
     844:	8f 7a       	andi	r24, 0xAF	; 175
     846:	81 b9       	out	0x01, r24	; 1
		PORTA|= 0B10000000;
     848:	17 9a       	sbi	0x02, 7	; 2
		PORTA&=~0b00100000;
     84a:	15 98       	cbi	0x02, 5	; 2
     84c:	20 e2       	ldi	r18, 0x20	; 32
     84e:	3e e4       	ldi	r19, 0x4E	; 78
     850:	c9 01       	movw	r24, r18
     852:	01 97       	sbiw	r24, 0x01	; 1
     854:	f1 f7       	brne	.-4      	; 0x852 <get_touch+0x60>



uint8_t get_adc(unsigned char ch)
{
	ADMUX=0x60|ch;
     856:	84 e6       	ldi	r24, 0x64	; 100
     858:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA=0xC7;
     85c:	87 ec       	ldi	r24, 0xC7	; 199
     85e:	80 93 7a 00 	sts	0x007A, r24
     862:	c9 01       	movw	r24, r18
     864:	01 97       	sbiw	r24, 0x01	; 1
     866:	f1 f7       	brne	.-4      	; 0x864 <get_touch+0x72>
	while(!ADIF);
	_delay_ms(10);
	return(ADCH);
     868:	00 91 79 00 	lds	r16, 0x0079
     86c:	88 ee       	ldi	r24, 0xE8	; 232
     86e:	93 e0       	ldi	r25, 0x03	; 3
     870:	28 ec       	ldi	r18, 0xC8	; 200
     872:	30 e0       	ldi	r19, 0x00	; 0
     874:	f9 01       	movw	r30, r18
     876:	31 97       	sbiw	r30, 0x01	; 1
     878:	f1 f7       	brne	.-4      	; 0x876 <get_touch+0x84>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     87a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     87c:	d9 f7       	brne	.-10     	; 0x874 <get_touch+0x82>
		data((y/10)+48);
		y=y%10;
		transmit0(y+48);
		data(y+48);
		_delay_ms(10);*/
		if ((x_touch>=20) && (x_touch<70))
     87e:	84 2f       	mov	r24, r20
     880:	84 51       	subi	r24, 0x14	; 20
     882:	82 33       	cpi	r24, 0x32	; 50
     884:	f0 f4       	brcc	.+60     	; 0x8c2 <get_touch+0xd0>
		{
			if ((y_touch>173)&&(y_touch<=225))
     886:	80 2f       	mov	r24, r16
     888:	8e 5a       	subi	r24, 0xAE	; 174
     88a:	84 33       	cpi	r24, 0x34	; 52
     88c:	30 f4       	brcc	.+12     	; 0x89a <get_touch+0xa8>
			{
				//lcd_char('*');
				 string( "1");
     88e:	80 e0       	ldi	r24, 0x00	; 0
     890:	91 e0       	ldi	r25, 0x01	; 1
     892:	0e 94 df 03 	call	0x7be	; 0x7be <string>
     896:	81 e3       	ldi	r24, 0x31	; 49
     898:	85 c0       	rjmp	.+266    	; 0x9a4 <get_touch+0x1b2>
				return('1');
			}
			if ((y_touch>109)&&(y_touch<170))
     89a:	80 2f       	mov	r24, r16
     89c:	8e 56       	subi	r24, 0x6E	; 110
     89e:	8c 33       	cpi	r24, 0x3C	; 60
     8a0:	30 f4       	brcc	.+12     	; 0x8ae <get_touch+0xbc>
			{
				//lcd_char('#');
				 string( "2");
     8a2:	82 e0       	ldi	r24, 0x02	; 2
     8a4:	91 e0       	ldi	r25, 0x01	; 1
     8a6:	0e 94 df 03 	call	0x7be	; 0x7be <string>
     8aa:	82 e3       	ldi	r24, 0x32	; 50
     8ac:	7b c0       	rjmp	.+246    	; 0x9a4 <get_touch+0x1b2>
				 return('2');
			}
			else if ((y_touch>=48)&&(y_touch<100))
     8ae:	00 53       	subi	r16, 0x30	; 48
     8b0:	04 33       	cpi	r16, 0x34	; 52
     8b2:	08 f0       	brcs	.+2      	; 0x8b6 <get_touch+0xc4>
     8b4:	76 c0       	rjmp	.+236    	; 0x9a2 <get_touch+0x1b0>
			{
				//lcd_char(',');
				 string( "3");
     8b6:	84 e0       	ldi	r24, 0x04	; 4
     8b8:	91 e0       	ldi	r25, 0x01	; 1
     8ba:	0e 94 df 03 	call	0x7be	; 0x7be <string>
     8be:	83 e3       	ldi	r24, 0x33	; 51
     8c0:	71 c0       	rjmp	.+226    	; 0x9a4 <get_touch+0x1b2>
				 return('3');
			}
			
		}
		
		else if ((x_touch>=70) && (x_touch<120))
     8c2:	84 2f       	mov	r24, r20
     8c4:	86 54       	subi	r24, 0x46	; 70
     8c6:	82 33       	cpi	r24, 0x32	; 50
     8c8:	f0 f4       	brcc	.+60     	; 0x906 <get_touch+0x114>
		{
			if ((y_touch>=170)&&(y_touch<225))
     8ca:	80 2f       	mov	r24, r16
     8cc:	8a 5a       	subi	r24, 0xAA	; 170
     8ce:	87 33       	cpi	r24, 0x37	; 55
     8d0:	30 f4       	brcc	.+12     	; 0x8de <get_touch+0xec>
			{
				//lcd_char('*');
				string( "4");
     8d2:	86 e0       	ldi	r24, 0x06	; 6
     8d4:	91 e0       	ldi	r25, 0x01	; 1
     8d6:	0e 94 df 03 	call	0x7be	; 0x7be <string>
     8da:	84 e3       	ldi	r24, 0x34	; 52
     8dc:	63 c0       	rjmp	.+198    	; 0x9a4 <get_touch+0x1b2>
				return('4');
			}
			if ((y_touch>=110)&&(y_touch<170))
     8de:	80 2f       	mov	r24, r16
     8e0:	8e 56       	subi	r24, 0x6E	; 110
     8e2:	8c 33       	cpi	r24, 0x3C	; 60
     8e4:	30 f4       	brcc	.+12     	; 0x8f2 <get_touch+0x100>
			{
				//lcd_char('#');
				string( "5");
     8e6:	88 e0       	ldi	r24, 0x08	; 8
     8e8:	91 e0       	ldi	r25, 0x01	; 1
     8ea:	0e 94 df 03 	call	0x7be	; 0x7be <string>
     8ee:	85 e3       	ldi	r24, 0x35	; 53
     8f0:	59 c0       	rjmp	.+178    	; 0x9a4 <get_touch+0x1b2>
				return('5');
			}
			else if ((y_touch>=40)&&(y_touch<=100))
     8f2:	08 52       	subi	r16, 0x28	; 40
     8f4:	0d 33       	cpi	r16, 0x3D	; 61
     8f6:	08 f0       	brcs	.+2      	; 0x8fa <get_touch+0x108>
     8f8:	54 c0       	rjmp	.+168    	; 0x9a2 <get_touch+0x1b0>
			{
				//lcd_char(',');
				string( "6");
     8fa:	8a e0       	ldi	r24, 0x0A	; 10
     8fc:	91 e0       	ldi	r25, 0x01	; 1
     8fe:	0e 94 df 03 	call	0x7be	; 0x7be <string>
     902:	86 e3       	ldi	r24, 0x36	; 54
     904:	4f c0       	rjmp	.+158    	; 0x9a4 <get_touch+0x1b2>
				return('6');
			}
			
		}
		
		else if ((x_touch>=130) && (x_touch<180))
     906:	84 2f       	mov	r24, r20
     908:	82 58       	subi	r24, 0x82	; 130
     90a:	82 33       	cpi	r24, 0x32	; 50
     90c:	e8 f4       	brcc	.+58     	; 0x948 <get_touch+0x156>
		{
			if ((y_touch>170)&&(y_touch<=225))
     90e:	80 2f       	mov	r24, r16
     910:	8b 5a       	subi	r24, 0xAB	; 171
     912:	87 33       	cpi	r24, 0x37	; 55
     914:	30 f4       	brcc	.+12     	; 0x922 <get_touch+0x130>
			{
				//lcd_char('*');
				string( "7");
     916:	8c e0       	ldi	r24, 0x0C	; 12
     918:	91 e0       	ldi	r25, 0x01	; 1
     91a:	0e 94 df 03 	call	0x7be	; 0x7be <string>
     91e:	87 e3       	ldi	r24, 0x37	; 55
     920:	41 c0       	rjmp	.+130    	; 0x9a4 <get_touch+0x1b2>
				return('7');
			}
			if ((y_touch>=110)&&(y_touch<170))
     922:	80 2f       	mov	r24, r16
     924:	8e 56       	subi	r24, 0x6E	; 110
     926:	8c 33       	cpi	r24, 0x3C	; 60
     928:	30 f4       	brcc	.+12     	; 0x936 <get_touch+0x144>
			{
				//lcd_char('#');
				string( "8");
     92a:	8e e0       	ldi	r24, 0x0E	; 14
     92c:	91 e0       	ldi	r25, 0x01	; 1
     92e:	0e 94 df 03 	call	0x7be	; 0x7be <string>
     932:	88 e3       	ldi	r24, 0x38	; 56
     934:	37 c0       	rjmp	.+110    	; 0x9a4 <get_touch+0x1b2>
				return('8');
			}
			if ((y_touch>=40)&&(y_touch<100))
     936:	08 52       	subi	r16, 0x28	; 40
     938:	0c 33       	cpi	r16, 0x3C	; 60
     93a:	98 f5       	brcc	.+102    	; 0x9a2 <get_touch+0x1b0>
			{
				//lcd_char('#');
				string( "9");
     93c:	80 e1       	ldi	r24, 0x10	; 16
     93e:	91 e0       	ldi	r25, 0x01	; 1
     940:	0e 94 df 03 	call	0x7be	; 0x7be <string>
     944:	89 e3       	ldi	r24, 0x39	; 57
     946:	2e c0       	rjmp	.+92     	; 0x9a4 <get_touch+0x1b2>
				return('9');
			}
			
		}
		
		else if ((x_touch>=180) && (x_touch<255))
     948:	44 5b       	subi	r20, 0xB4	; 180
     94a:	4b 34       	cpi	r20, 0x4B	; 75
     94c:	50 f5       	brcc	.+84     	; 0x9a2 <get_touch+0x1b0>
		{
			if ((y_touch>170)&&(y_touch<=225))
     94e:	80 2f       	mov	r24, r16
     950:	8b 5a       	subi	r24, 0xAB	; 171
     952:	87 33       	cpi	r24, 0x37	; 55
     954:	e8 f4       	brcc	.+58     	; 0x990 <get_touch+0x19e>



void cmd(unsigned char c)
{
	PORTC=c;
     956:	81 e0       	ldi	r24, 0x01	; 1
     958:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
     95a:	80 e4       	ldi	r24, 0x40	; 64
     95c:	f8 2e       	mov	r15, r24
     95e:	fb b8       	out	0x0b, r15	; 11
     960:	c0 ed       	ldi	r28, 0xD0	; 208
     962:	d7 e0       	ldi	r29, 0x07	; 7
     964:	ce 01       	movw	r24, r28
     966:	01 97       	sbiw	r24, 0x01	; 1
     968:	f1 f7       	brne	.-4      	; 0x966 <get_touch+0x174>
	_delay_ms(1);
	PORTD=0x00;
     96a:	1b b8       	out	0x0b, r1	; 11



void cmd(unsigned char c)
{
	PORTC=c;
     96c:	80 e8       	ldi	r24, 0x80	; 128
     96e:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
     970:	fb b8       	out	0x0b, r15	; 11
     972:	ce 01       	movw	r24, r28
     974:	01 97       	sbiw	r24, 0x01	; 1
     976:	f1 f7       	brne	.-4      	; 0x974 <get_touch+0x182>
	_delay_ms(1);
	PORTD=0x00;
     978:	1b b8       	out	0x0b, r1	; 11
			{
				//lcd_char('*');
				cmd(0x01);
				cmd(0x80);
				string("Enter Password :");
     97a:	82 e1       	ldi	r24, 0x12	; 18
     97c:	91 e0       	ldi	r25, 0x01	; 1
     97e:	0e 94 df 03 	call	0x7be	; 0x7be <string>



void cmd(unsigned char c)
{
	PORTC=c;
     982:	80 ec       	ldi	r24, 0xC0	; 192
     984:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
     986:	fb b8       	out	0x0b, r15	; 11
     988:	ce 01       	movw	r24, r28
     98a:	01 97       	sbiw	r24, 0x01	; 1
     98c:	f1 f7       	brne	.-4      	; 0x98a <get_touch+0x198>
	_delay_ms(1);
	PORTD=0x00;
     98e:	1b b8       	out	0x0b, r1	; 11
				cmd(0xC0);
			}
			if ((y_touch>=110)&&(y_touch<170))
     990:	0e 56       	subi	r16, 0x6E	; 110
     992:	0c 33       	cpi	r16, 0x3C	; 60
     994:	30 f4       	brcc	.+12     	; 0x9a2 <get_touch+0x1b0>
			{
				//lcd_char('#');
				string( "0");
     996:	83 e2       	ldi	r24, 0x23	; 35
     998:	91 e0       	ldi	r25, 0x01	; 1
     99a:	0e 94 df 03 	call	0x7be	; 0x7be <string>
     99e:	80 e3       	ldi	r24, 0x30	; 48
     9a0:	01 c0       	rjmp	.+2      	; 0x9a4 <get_touch+0x1b2>
				return('0');
     9a2:	80 e0       	ldi	r24, 0x00	; 0
			{
				//lcd_char('#');
			}
		}
		return 0;
}
     9a4:	df 91       	pop	r29
     9a6:	cf 91       	pop	r28
     9a8:	0f 91       	pop	r16
     9aa:	ff 90       	pop	r15
     9ac:	08 95       	ret

000009ae <uartinit_1>:
volatile unsigned int i=0,it=0,one_time=0,pk=0,dk=0;


void uartinit_1(void)
{
	UBRR1L=0x33;
     9ae:	83 e3       	ldi	r24, 0x33	; 51
     9b0:	80 93 cc 00 	sts	0x00CC, r24
	UCSR1B |= (1 << RXEN1 ) | (1 << TXEN1 )|(1<<RXCIE1);
     9b4:	e9 ec       	ldi	r30, 0xC9	; 201
     9b6:	f0 e0       	ldi	r31, 0x00	; 0
     9b8:	80 81       	ld	r24, Z
     9ba:	88 69       	ori	r24, 0x98	; 152
     9bc:	80 83       	st	Z, r24

}
     9be:	08 95       	ret

000009c0 <uart_trans1>:


uart_trans1(char tx_data1)
{
     9c0:	98 2f       	mov	r25, r24
	while (( UCSR1A & (1 << UDRE1 )) == 0);
     9c2:	80 91 c8 00 	lds	r24, 0x00C8
     9c6:	85 ff       	sbrs	r24, 5
     9c8:	fc cf       	rjmp	.-8      	; 0x9c2 <uart_trans1+0x2>
	UDR1 = tx_data1 ;
     9ca:	90 93 ce 00 	sts	0x00CE, r25
	
}
     9ce:	08 95       	ret

000009d0 <stransmit1>:

void stransmit1(char *p)
{
     9d0:	fc 01       	movw	r30, r24
     9d2:	07 c0       	rjmp	.+14     	; 0x9e2 <stransmit1+0x12>
}


uart_trans1(char tx_data1)
{
	while (( UCSR1A & (1 << UDRE1 )) == 0);
     9d4:	80 91 c8 00 	lds	r24, 0x00C8
     9d8:	85 ff       	sbrs	r24, 5
     9da:	fc cf       	rjmp	.-8      	; 0x9d4 <stransmit1+0x4>
	
}

void stransmit1(char *p)
{
	while(*p) uart_trans1(*p++);
     9dc:	31 96       	adiw	r30, 0x01	; 1


uart_trans1(char tx_data1)
{
	while (( UCSR1A & (1 << UDRE1 )) == 0);
	UDR1 = tx_data1 ;
     9de:	90 93 ce 00 	sts	0x00CE, r25
	
}

void stransmit1(char *p)
{
	while(*p) uart_trans1(*p++);
     9e2:	90 81       	ld	r25, Z
     9e4:	99 23       	and	r25, r25
     9e6:	b1 f7       	brne	.-20     	; 0x9d4 <stransmit1+0x4>
}
     9e8:	08 95       	ret

000009ea <__vector_28>:

ISR(USART1_RX_vect)
{
     9ea:	1f 92       	push	r1
     9ec:	0f 92       	push	r0
     9ee:	0f b6       	in	r0, 0x3f	; 63
     9f0:	0f 92       	push	r0
     9f2:	11 24       	eor	r1, r1
     9f4:	ff 92       	push	r15
     9f6:	0f 93       	push	r16
     9f8:	1f 93       	push	r17
     9fa:	2f 93       	push	r18
     9fc:	3f 93       	push	r19
     9fe:	4f 93       	push	r20
     a00:	5f 93       	push	r21
     a02:	6f 93       	push	r22
     a04:	7f 93       	push	r23
     a06:	8f 93       	push	r24
     a08:	9f 93       	push	r25
     a0a:	af 93       	push	r26
     a0c:	bf 93       	push	r27
     a0e:	ef 93       	push	r30
     a10:	ff 93       	push	r31
	dk=UDR1;
     a12:	80 91 ce 00 	lds	r24, 0x00CE
     a16:	90 e0       	ldi	r25, 0x00	; 0
     a18:	90 93 bf 02 	sts	0x02BF, r25
     a1c:	80 93 be 02 	sts	0x02BE, r24



void cmd(unsigned char c)
{
	PORTC=c;
     a20:	81 e0       	ldi	r24, 0x01	; 1
     a22:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
     a24:	90 e4       	ldi	r25, 0x40	; 64
     a26:	f9 2e       	mov	r15, r25
     a28:	fb b8       	out	0x0b, r15	; 11
     a2a:	00 ed       	ldi	r16, 0xD0	; 208
     a2c:	17 e0       	ldi	r17, 0x07	; 7
     a2e:	c8 01       	movw	r24, r16
     a30:	01 97       	sbiw	r24, 0x01	; 1
     a32:	f1 f7       	brne	.-4      	; 0xa30 <__vector_28+0x46>
	_delay_ms(1);
	PORTD=0x00;
     a34:	1b b8       	out	0x0b, r1	; 11



void cmd(unsigned char c)
{
	PORTC=c;
     a36:	80 e8       	ldi	r24, 0x80	; 128
     a38:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
     a3a:	fb b8       	out	0x0b, r15	; 11
     a3c:	c8 01       	movw	r24, r16
     a3e:	01 97       	sbiw	r24, 0x01	; 1
     a40:	f1 f7       	brne	.-4      	; 0xa3e <__vector_28+0x54>
	_delay_ms(1);
	PORTD=0x00;
     a42:	1b b8       	out	0x0b, r1	; 11
	cmd(0x01);
	cmd(0x80);
	string("Received Data");
     a44:	85 e2       	ldi	r24, 0x25	; 37
     a46:	91 e0       	ldi	r25, 0x01	; 1
     a48:	0e 94 df 03 	call	0x7be	; 0x7be <string>



void cmd(unsigned char c)
{
	PORTC=c;
     a4c:	80 ec       	ldi	r24, 0xC0	; 192
     a4e:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
     a50:	fb b8       	out	0x0b, r15	; 11
     a52:	c8 01       	movw	r24, r16
     a54:	01 97       	sbiw	r24, 0x01	; 1
     a56:	f1 f7       	brne	.-4      	; 0xa54 <__vector_28+0x6a>
	_delay_ms(1);
	PORTD=0x00;
     a58:	1b b8       	out	0x0b, r1	; 11
	cmd(0xC0);
	data(dk);
     a5a:	80 91 be 02 	lds	r24, 0x02BE
     a5e:	90 91 bf 02 	lds	r25, 0x02BF
     a62:	0e 94 c6 03 	call	0x78c	; 0x78c <data>
     a66:	80 e1       	ldi	r24, 0x10	; 16
     a68:	97 e2       	ldi	r25, 0x27	; 39
     a6a:	28 ec       	ldi	r18, 0xC8	; 200
     a6c:	30 e0       	ldi	r19, 0x00	; 0
     a6e:	f9 01       	movw	r30, r18
     a70:	31 97       	sbiw	r30, 0x01	; 1
     a72:	f1 f7       	brne	.-4      	; 0xa70 <__vector_28+0x86>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a74:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a76:	d9 f7       	brne	.-10     	; 0xa6e <__vector_28+0x84>
	_delay_ms(1000);
}
     a78:	ff 91       	pop	r31
     a7a:	ef 91       	pop	r30
     a7c:	bf 91       	pop	r27
     a7e:	af 91       	pop	r26
     a80:	9f 91       	pop	r25
     a82:	8f 91       	pop	r24
     a84:	7f 91       	pop	r23
     a86:	6f 91       	pop	r22
     a88:	5f 91       	pop	r21
     a8a:	4f 91       	pop	r20
     a8c:	3f 91       	pop	r19
     a8e:	2f 91       	pop	r18
     a90:	1f 91       	pop	r17
     a92:	0f 91       	pop	r16
     a94:	ff 90       	pop	r15
     a96:	0f 90       	pop	r0
     a98:	0f be       	out	0x3f, r0	; 63
     a9a:	0f 90       	pop	r0
     a9c:	1f 90       	pop	r1
     a9e:	18 95       	reti

00000aa0 <__vector_20>:

ISR(USART0_RX_vect)
{
     aa0:	1f 92       	push	r1
     aa2:	0f 92       	push	r0
     aa4:	0f b6       	in	r0, 0x3f	; 63
     aa6:	0f 92       	push	r0
     aa8:	11 24       	eor	r1, r1
     aaa:	8f 93       	push	r24
     aac:	9f 93       	push	r25
     aae:	ef 93       	push	r30
     ab0:	ff 93       	push	r31
	ack[it]=UDR0;
     ab2:	e0 91 b8 02 	lds	r30, 0x02B8
     ab6:	f0 91 b9 02 	lds	r31, 0x02B9
     aba:	80 91 c6 00 	lds	r24, 0x00C6
     abe:	e6 55       	subi	r30, 0x56	; 86
     ac0:	fd 4f       	sbci	r31, 0xFD	; 253
     ac2:	80 83       	st	Z, r24
	it++;
     ac4:	80 91 b8 02 	lds	r24, 0x02B8
     ac8:	90 91 b9 02 	lds	r25, 0x02B9
     acc:	01 96       	adiw	r24, 0x01	; 1
     ace:	90 93 b9 02 	sts	0x02B9, r25
     ad2:	80 93 b8 02 	sts	0x02B8, r24
	
	if(it>11)
     ad6:	80 91 b8 02 	lds	r24, 0x02B8
     ada:	90 91 b9 02 	lds	r25, 0x02B9
     ade:	0c 97       	sbiw	r24, 0x0c	; 12
     ae0:	50 f0       	brcs	.+20     	; 0xaf6 <__vector_20+0x56>
	{
			pk=1;
     ae2:	81 e0       	ldi	r24, 0x01	; 1
     ae4:	90 e0       	ldi	r25, 0x00	; 0
     ae6:	90 93 bd 02 	sts	0x02BD, r25
     aea:	80 93 bc 02 	sts	0x02BC, r24
			it=0;
     aee:	10 92 b9 02 	sts	0x02B9, r1
     af2:	10 92 b8 02 	sts	0x02B8, r1
	}	
}
     af6:	ff 91       	pop	r31
     af8:	ef 91       	pop	r30
     afa:	9f 91       	pop	r25
     afc:	8f 91       	pop	r24
     afe:	0f 90       	pop	r0
     b00:	0f be       	out	0x3f, r0	; 63
     b02:	0f 90       	pop	r0
     b04:	1f 90       	pop	r1
     b06:	18 95       	reti

00000b08 <main>:


void main()
{
     b08:	2f 92       	push	r2
     b0a:	3f 92       	push	r3
     b0c:	4f 92       	push	r4
     b0e:	5f 92       	push	r5
     b10:	6f 92       	push	r6
     b12:	7f 92       	push	r7
     b14:	8f 92       	push	r8
     b16:	9f 92       	push	r9
     b18:	af 92       	push	r10
     b1a:	bf 92       	push	r11
     b1c:	cf 92       	push	r12
     b1e:	df 92       	push	r13
     b20:	ef 92       	push	r14
     b22:	ff 92       	push	r15
     b24:	0f 93       	push	r16
     b26:	1f 93       	push	r17
     b28:	df 93       	push	r29
     b2a:	cf 93       	push	r28
     b2c:	cd b7       	in	r28, 0x3d	; 61
     b2e:	de b7       	in	r29, 0x3e	; 62
     b30:	60 97       	sbiw	r28, 0x10	; 16
     b32:	0f b6       	in	r0, 0x3f	; 63
     b34:	f8 94       	cli
     b36:	de bf       	out	0x3e, r29	; 62
     b38:	0f be       	out	0x3f, r0	; 63
     b3a:	cd bf       	out	0x3d, r28	; 61
	DDRC=0xff;
     b3c:	9f ef       	ldi	r25, 0xFF	; 255
     b3e:	97 b9       	out	0x07, r25	; 7
	DDRD=0xf0;
     b40:	80 ef       	ldi	r24, 0xF0	; 240
     b42:	8a b9       	out	0x0a, r24	; 10
	DDRA=0x00;
     b44:	11 b8       	out	0x01, r1	; 1
	DDRB=0xff;
     b46:	94 b9       	out	0x04, r25	; 4
	unsigned int flag=0,flag0=0,flag1=0,id,t,t1,t2;
	unsigned char p[4],q,r,s[4]="1324",s1[4]="4537",s2[4]="9063";
     b48:	80 91 53 02 	lds	r24, 0x0253
     b4c:	90 91 54 02 	lds	r25, 0x0254
     b50:	a0 91 55 02 	lds	r26, 0x0255
     b54:	b0 91 56 02 	lds	r27, 0x0256
     b58:	8d 83       	std	Y+5, r24	; 0x05
     b5a:	9e 83       	std	Y+6, r25	; 0x06
     b5c:	af 83       	std	Y+7, r26	; 0x07
     b5e:	b8 87       	std	Y+8, r27	; 0x08
     b60:	80 91 58 02 	lds	r24, 0x0258
     b64:	90 91 59 02 	lds	r25, 0x0259
     b68:	a0 91 5a 02 	lds	r26, 0x025A
     b6c:	b0 91 5b 02 	lds	r27, 0x025B
     b70:	89 87       	std	Y+9, r24	; 0x09
     b72:	9a 87       	std	Y+10, r25	; 0x0a
     b74:	ab 87       	std	Y+11, r26	; 0x0b
     b76:	bc 87       	std	Y+12, r27	; 0x0c
     b78:	80 91 5d 02 	lds	r24, 0x025D
     b7c:	90 91 5e 02 	lds	r25, 0x025E
     b80:	a0 91 5f 02 	lds	r26, 0x025F
     b84:	b0 91 60 02 	lds	r27, 0x0260
     b88:	8d 87       	std	Y+13, r24	; 0x0d
     b8a:	9e 87       	std	Y+14, r25	; 0x0e
     b8c:	af 87       	std	Y+15, r26	; 0x0f
     b8e:	b8 8b       	std	Y+16, r27	; 0x10
unsigned char emptylib_ack[12]={0xEF,0X01,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x03,0X00,0x00,0X0A};
unsigned char deletetemp_ack[12]={0xEF,0X01,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x03,0X00,0x00,0X0A};

void uartinit(void)
{
	UBRR0L=0x0C;
     b90:	8c e0       	ldi	r24, 0x0C	; 12
     b92:	80 93 c4 00 	sts	0x00C4, r24
	UCSR0B |= (1 << RXEN0 ) | (1 << TXEN0 )| (1<<RXCIE0);
     b96:	80 91 c1 00 	lds	r24, 0x00C1
     b9a:	88 69       	ori	r24, 0x98	; 152
     b9c:	80 93 c1 00 	sts	0x00C1, r24
volatile unsigned int i=0,it=0,one_time=0,pk=0,dk=0;


void uartinit_1(void)
{
	UBRR1L=0x33;
     ba0:	83 e3       	ldi	r24, 0x33	; 51
     ba2:	80 93 cc 00 	sts	0x00CC, r24
	UCSR1B |= (1 << RXEN1 ) | (1 << TXEN1 )|(1<<RXCIE1);
     ba6:	80 91 c9 00 	lds	r24, 0x00C9
     baa:	88 69       	ori	r24, 0x98	; 152
     bac:	80 93 c9 00 	sts	0x00C9, r24
	DDRB=0xff;
	unsigned int flag=0,flag0=0,flag1=0,id,t,t1,t2;
	unsigned char p[4],q,r,s[4]="1324",s1[4]="4537",s2[4]="9063";
	uartinit();
	uartinit_1();
	sei();
     bb0:	78 94       	sei
	lcdinit();
     bb2:	0e 94 ac 03 	call	0x758	; 0x758 <lcdinit>



void cmd(unsigned char c)
{
	PORTC=c;
     bb6:	80 e8       	ldi	r24, 0x80	; 128
     bb8:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
     bba:	00 e4       	ldi	r16, 0x40	; 64
     bbc:	f0 2e       	mov	r15, r16
     bbe:	fb b8       	out	0x0b, r15	; 11
     bc0:	00 ed       	ldi	r16, 0xD0	; 208
     bc2:	17 e0       	ldi	r17, 0x07	; 7
     bc4:	c8 01       	movw	r24, r16
     bc6:	01 97       	sbiw	r24, 0x01	; 1
     bc8:	f1 f7       	brne	.-4      	; 0xbc6 <main+0xbe>
	_delay_ms(1);
	PORTD=0x00;
     bca:	1b b8       	out	0x0b, r1	; 11
	cmd(0x80);
	string("Enter Password : ");
     bcc:	83 e3       	ldi	r24, 0x33	; 51
     bce:	91 e0       	ldi	r25, 0x01	; 1
     bd0:	0e 94 df 03 	call	0x7be	; 0x7be <string>



void cmd(unsigned char c)
{
	PORTC=c;
     bd4:	80 ec       	ldi	r24, 0xC0	; 192
     bd6:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
     bd8:	fb b8       	out	0x0b, r15	; 11
     bda:	c8 01       	movw	r24, r16
     bdc:	01 97       	sbiw	r24, 0x01	; 1
     bde:	f1 f7       	brne	.-4      	; 0xbdc <main+0xd4>
	_delay_ms(1);
	PORTD=0x00;
     be0:	1b b8       	out	0x0b, r1	; 11
	cmd(0xC0);
	PORTB=0x00;
     be2:	15 b8       	out	0x05, r1	; 5
     be4:	f9 c3       	rjmp	.+2034   	; 0x13d8 <__stack+0x2d9>
     be6:	80 e0       	ldi	r24, 0x00	; 0
     be8:	90 e0       	ldi	r25, 0x00	; 0
     bea:	11 e0       	ldi	r17, 0x01	; 1
     bec:	61 2e       	mov	r6, r17
     bee:	71 2c       	mov	r7, r1
     bf0:	1f c1       	rjmp	.+574    	; 0xe30 <main+0x328>
     bf2:	81 e0       	ldi	r24, 0x01	; 1
     bf4:	90 e0       	ldi	r25, 0x00	; 0
     bf6:	b8 ec       	ldi	r27, 0xC8	; 200
     bf8:	8b 2e       	mov	r8, r27
     bfa:	91 2c       	mov	r9, r1
     bfc:	19 c1       	rjmp	.+562    	; 0xe30 <main+0x328>
	while(1)
	{
		if(flag==0)
		{
			for(i=0;i<4;i++)
     bfe:	10 92 b7 02 	sts	0x02B7, r1
     c02:	10 92 b6 02 	sts	0x02B6, r1
     c06:	10 c0       	rjmp	.+32     	; 0xc28 <main+0x120>
			{
				p[i]=0;
     c08:	e0 91 b6 02 	lds	r30, 0x02B6
     c0c:	f0 91 b7 02 	lds	r31, 0x02B7
     c10:	e8 0d       	add	r30, r8
     c12:	f9 1d       	adc	r31, r9
     c14:	10 82       	st	Z, r1
	PORTB=0x00;
	while(1)
	{
		if(flag==0)
		{
			for(i=0;i<4;i++)
     c16:	80 91 b6 02 	lds	r24, 0x02B6
     c1a:	90 91 b7 02 	lds	r25, 0x02B7
     c1e:	01 96       	adiw	r24, 0x01	; 1
     c20:	90 93 b7 02 	sts	0x02B7, r25
     c24:	80 93 b6 02 	sts	0x02B6, r24
     c28:	80 91 b6 02 	lds	r24, 0x02B6
     c2c:	90 91 b7 02 	lds	r25, 0x02B7
     c30:	04 97       	sbiw	r24, 0x04	; 4
     c32:	50 f3       	brcs	.-44     	; 0xc08 <main+0x100>
			{
				p[i]=0;
			}
			i=0;
     c34:	10 92 b7 02 	sts	0x02B7, r1
     c38:	10 92 b6 02 	sts	0x02B6, r1
     c3c:	1b c0       	rjmp	.+54     	; 0xc74 <main+0x16c>
		  while(i<4)
		  {
			r=get_touch();
     c3e:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <get_touch>
			if(r!=0)
     c42:	88 23       	and	r24, r24
     c44:	b9 f0       	breq	.+46     	; 0xc74 <main+0x16c>
			{ 
			p[i]=r;
     c46:	e0 91 b6 02 	lds	r30, 0x02B6
     c4a:	f0 91 b7 02 	lds	r31, 0x02B7
     c4e:	e8 0d       	add	r30, r8
     c50:	f9 1d       	adc	r31, r9
     c52:	80 83       	st	Z, r24
			i++;
     c54:	80 91 b6 02 	lds	r24, 0x02B6
     c58:	90 91 b7 02 	lds	r25, 0x02B7
     c5c:	01 96       	adiw	r24, 0x01	; 1
     c5e:	90 93 b7 02 	sts	0x02B7, r25
     c62:	80 93 b6 02 	sts	0x02B6, r24
     c66:	80 e1       	ldi	r24, 0x10	; 16
     c68:	97 e2       	ldi	r25, 0x27	; 39
     c6a:	f2 01       	movw	r30, r4
     c6c:	31 97       	sbiw	r30, 0x01	; 1
     c6e:	f1 f7       	brne	.-4      	; 0xc6c <main+0x164>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c70:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c72:	d9 f7       	brne	.-10     	; 0xc6a <main+0x162>
			for(i=0;i<4;i++)
			{
				p[i]=0;
			}
			i=0;
		  while(i<4)
     c74:	80 91 b6 02 	lds	r24, 0x02B6
     c78:	90 91 b7 02 	lds	r25, 0x02B7
     c7c:	04 97       	sbiw	r24, 0x04	; 4
     c7e:	f8 f2       	brcs	.-66     	; 0xc3e <main+0x136>



void cmd(unsigned char c)
{
	PORTC=c;
     c80:	a8 b8       	out	0x08, r10	; 8
	PORTD=0x40;
     c82:	bb b8       	out	0x0b, r11	; 11
     c84:	c7 01       	movw	r24, r14
     c86:	01 97       	sbiw	r24, 0x01	; 1
     c88:	f1 f7       	brne	.-4      	; 0xc86 <main+0x17e>
	_delay_ms(1);
	PORTD=0x00;
     c8a:	1b b8       	out	0x0b, r1	; 11



void cmd(unsigned char c)
{
	PORTC=c;
     c8c:	80 e8       	ldi	r24, 0x80	; 128
     c8e:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
     c90:	bb b8       	out	0x0b, r11	; 11
     c92:	c7 01       	movw	r24, r14
     c94:	01 97       	sbiw	r24, 0x01	; 1
     c96:	f1 f7       	brne	.-4      	; 0xc94 <main+0x18c>
	_delay_ms(1);
	PORTD=0x00;
     c98:	1b b8       	out	0x0b, r1	; 11
			}
			
		  }
		  cmd(0x01);
		  cmd(0x80);
		  string("Enter Password : ");
     c9a:	83 e3       	ldi	r24, 0x33	; 51
     c9c:	91 e0       	ldi	r25, 0x01	; 1
     c9e:	0e 94 df 03 	call	0x7be	; 0x7be <string>



void cmd(unsigned char c)
{
	PORTC=c;
     ca2:	80 ec       	ldi	r24, 0xC0	; 192
     ca4:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
     ca6:	bb b8       	out	0x0b, r11	; 11
     ca8:	c7 01       	movw	r24, r14
     caa:	01 97       	sbiw	r24, 0x01	; 1
     cac:	f1 f7       	brne	.-4      	; 0xcaa <main+0x1a2>
	_delay_ms(1);
	PORTD=0x00;
     cae:	1b b8       	out	0x0b, r1	; 11
		  cmd(0xC0);
		  string("Checking....");
     cb0:	85 e4       	ldi	r24, 0x45	; 69
     cb2:	91 e0       	ldi	r25, 0x01	; 1
     cb4:	0e 94 df 03 	call	0x7be	; 0x7be <string>
     cb8:	80 e2       	ldi	r24, 0x20	; 32
     cba:	9e e4       	ldi	r25, 0x4E	; 78
     cbc:	f2 01       	movw	r30, r4
     cbe:	31 97       	sbiw	r30, 0x01	; 1
     cc0:	f1 f7       	brne	.-4      	; 0xcbe <main+0x1b6>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     cc2:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     cc4:	d9 f7       	brne	.-10     	; 0xcbc <main+0x1b4>



void cmd(unsigned char c)
{
	PORTC=c;
     cc6:	cc 24       	eor	r12, r12
     cc8:	c3 94       	inc	r12
     cca:	a8 b8       	out	0x08, r10	; 8
	PORTD=0x40;
     ccc:	60 e4       	ldi	r22, 0x40	; 64
     cce:	d6 2e       	mov	r13, r22
     cd0:	bb b8       	out	0x0b, r11	; 11
     cd2:	00 ed       	ldi	r16, 0xD0	; 208
     cd4:	17 e0       	ldi	r17, 0x07	; 7
     cd6:	c7 01       	movw	r24, r14
     cd8:	01 97       	sbiw	r24, 0x01	; 1
     cda:	f1 f7       	brne	.-4      	; 0xcd8 <main+0x1d0>
	_delay_ms(1);
	PORTD=0x00;
     cdc:	1b b8       	out	0x0b, r1	; 11
		  _delay_ms(2000);
		  cmd(0x01);
		  if(!strncmp(s,p,4))
     cde:	ce 01       	movw	r24, r28
     ce0:	05 96       	adiw	r24, 0x05	; 5
     ce2:	b4 01       	movw	r22, r8
     ce4:	44 e0       	ldi	r20, 0x04	; 4
     ce6:	50 e0       	ldi	r21, 0x00	; 0
     ce8:	0e 94 56 0a 	call	0x14ac	; 0x14ac <strncmp>
     cec:	00 97       	sbiw	r24, 0x00	; 0
     cee:	31 f5       	brne	.+76     	; 0xd3c <main+0x234>



void cmd(unsigned char c)
{
	PORTC=c;
     cf0:	c8 b8       	out	0x08, r12	; 8
	PORTD=0x40;
     cf2:	db b8       	out	0x0b, r13	; 11
     cf4:	c8 01       	movw	r24, r16
     cf6:	01 97       	sbiw	r24, 0x01	; 1
     cf8:	f1 f7       	brne	.-4      	; 0xcf6 <main+0x1ee>
	_delay_ms(1);
	PORTD=0x00;
     cfa:	1b b8       	out	0x0b, r1	; 11



void cmd(unsigned char c)
{
	PORTC=c;
     cfc:	80 e8       	ldi	r24, 0x80	; 128
     cfe:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
     d00:	db b8       	out	0x0b, r13	; 11
     d02:	c8 01       	movw	r24, r16
     d04:	01 97       	sbiw	r24, 0x01	; 1
     d06:	f1 f7       	brne	.-4      	; 0xd04 <main+0x1fc>
	_delay_ms(1);
	PORTD=0x00;
     d08:	1b b8       	out	0x0b, r1	; 11
		  {
				flag=1;
				flag0=1;
				cmd(0x01);
				cmd(0x80);
				string("Welcome ");
     d0a:	82 e5       	ldi	r24, 0x52	; 82
     d0c:	91 e0       	ldi	r25, 0x01	; 1
     d0e:	0e 94 df 03 	call	0x7be	; 0x7be <string>



void cmd(unsigned char c)
{
	PORTC=c;
     d12:	80 ec       	ldi	r24, 0xC0	; 192
     d14:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
     d16:	db b8       	out	0x0b, r13	; 11
     d18:	c8 01       	movw	r24, r16
     d1a:	01 97       	sbiw	r24, 0x01	; 1
     d1c:	f1 f7       	brne	.-4      	; 0xd1a <main+0x212>
	_delay_ms(1);
	PORTD=0x00;
     d1e:	1b b8       	out	0x0b, r1	; 11
				cmd(0xC0);
				string("Omkar");
     d20:	8b e5       	ldi	r24, 0x5B	; 91
     d22:	91 e0       	ldi	r25, 0x01	; 1
     d24:	0e 94 df 03 	call	0x7be	; 0x7be <string>
     d28:	80 e3       	ldi	r24, 0x30	; 48
     d2a:	95 e7       	ldi	r25, 0x75	; 117
     d2c:	28 ec       	ldi	r18, 0xC8	; 200
     d2e:	30 e0       	ldi	r19, 0x00	; 0
     d30:	f9 01       	movw	r30, r18
     d32:	31 97       	sbiw	r30, 0x01	; 1
     d34:	f1 f7       	brne	.-4      	; 0xd32 <main+0x22a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d36:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d38:	d9 f7       	brne	.-10     	; 0xd30 <main+0x228>
     d3a:	5b cf       	rjmp	.-330    	; 0xbf2 <main+0xea>
				_delay_ms(3000);
				id=1;
		  }
		  else if(!strncmp(s1,p,4))
     d3c:	ce 01       	movw	r24, r28
     d3e:	09 96       	adiw	r24, 0x09	; 9
     d40:	b4 01       	movw	r22, r8
     d42:	44 e0       	ldi	r20, 0x04	; 4
     d44:	50 e0       	ldi	r21, 0x00	; 0
     d46:	0e 94 56 0a 	call	0x14ac	; 0x14ac <strncmp>
     d4a:	00 97       	sbiw	r24, 0x00	; 0
     d4c:	31 f5       	brne	.+76     	; 0xd9a <main+0x292>



void cmd(unsigned char c)
{
	PORTC=c;
     d4e:	c8 b8       	out	0x08, r12	; 8
	PORTD=0x40;
     d50:	db b8       	out	0x0b, r13	; 11
     d52:	c8 01       	movw	r24, r16
     d54:	01 97       	sbiw	r24, 0x01	; 1
     d56:	f1 f7       	brne	.-4      	; 0xd54 <main+0x24c>
	_delay_ms(1);
	PORTD=0x00;
     d58:	1b b8       	out	0x0b, r1	; 11



void cmd(unsigned char c)
{
	PORTC=c;
     d5a:	80 e8       	ldi	r24, 0x80	; 128
     d5c:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
     d5e:	db b8       	out	0x0b, r13	; 11
     d60:	c8 01       	movw	r24, r16
     d62:	01 97       	sbiw	r24, 0x01	; 1
     d64:	f1 f7       	brne	.-4      	; 0xd62 <main+0x25a>
	_delay_ms(1);
	PORTD=0x00;
     d66:	1b b8       	out	0x0b, r1	; 11
		  {
				flag=1;
				flag0=1;
				cmd(0x01);
				cmd(0x80);
				string("Welcome ");
     d68:	82 e5       	ldi	r24, 0x52	; 82
     d6a:	91 e0       	ldi	r25, 0x01	; 1
     d6c:	0e 94 df 03 	call	0x7be	; 0x7be <string>



void cmd(unsigned char c)
{
	PORTC=c;
     d70:	80 ec       	ldi	r24, 0xC0	; 192
     d72:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
     d74:	db b8       	out	0x0b, r13	; 11
     d76:	c8 01       	movw	r24, r16
     d78:	01 97       	sbiw	r24, 0x01	; 1
     d7a:	f1 f7       	brne	.-4      	; 0xd78 <main+0x270>
	_delay_ms(1);
	PORTD=0x00;
     d7c:	1b b8       	out	0x0b, r1	; 11
				cmd(0xC0);
				string("Shravan");
     d7e:	81 e6       	ldi	r24, 0x61	; 97
     d80:	91 e0       	ldi	r25, 0x01	; 1
     d82:	0e 94 df 03 	call	0x7be	; 0x7be <string>
     d86:	80 e3       	ldi	r24, 0x30	; 48
     d88:	95 e7       	ldi	r25, 0x75	; 117
     d8a:	28 ec       	ldi	r18, 0xC8	; 200
     d8c:	30 e0       	ldi	r19, 0x00	; 0
     d8e:	f9 01       	movw	r30, r18
     d90:	31 97       	sbiw	r30, 0x01	; 1
     d92:	f1 f7       	brne	.-4      	; 0xd90 <main+0x288>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d94:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d96:	d9 f7       	brne	.-10     	; 0xd8e <main+0x286>
     d98:	2c cf       	rjmp	.-424    	; 0xbf2 <main+0xea>
				_delay_ms(3000);
				id=3;
		  }
		  else if(!strncmp(s2,p,4))
     d9a:	c1 01       	movw	r24, r2
     d9c:	b4 01       	movw	r22, r8
     d9e:	44 e0       	ldi	r20, 0x04	; 4
     da0:	50 e0       	ldi	r21, 0x00	; 0
     da2:	0e 94 56 0a 	call	0x14ac	; 0x14ac <strncmp>
     da6:	00 97       	sbiw	r24, 0x00	; 0
     da8:	31 f5       	brne	.+76     	; 0xdf6 <main+0x2ee>



void cmd(unsigned char c)
{
	PORTC=c;
     daa:	c8 b8       	out	0x08, r12	; 8
	PORTD=0x40;
     dac:	db b8       	out	0x0b, r13	; 11
     dae:	c8 01       	movw	r24, r16
     db0:	01 97       	sbiw	r24, 0x01	; 1
     db2:	f1 f7       	brne	.-4      	; 0xdb0 <main+0x2a8>
	_delay_ms(1);
	PORTD=0x00;
     db4:	1b b8       	out	0x0b, r1	; 11



void cmd(unsigned char c)
{
	PORTC=c;
     db6:	80 e8       	ldi	r24, 0x80	; 128
     db8:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
     dba:	db b8       	out	0x0b, r13	; 11
     dbc:	c8 01       	movw	r24, r16
     dbe:	01 97       	sbiw	r24, 0x01	; 1
     dc0:	f1 f7       	brne	.-4      	; 0xdbe <main+0x2b6>
	_delay_ms(1);
	PORTD=0x00;
     dc2:	1b b8       	out	0x0b, r1	; 11
		  {
				flag=1;
				flag0=1;
				cmd(0x01);
				cmd(0x80);
				string("Welcome ");
     dc4:	82 e5       	ldi	r24, 0x52	; 82
     dc6:	91 e0       	ldi	r25, 0x01	; 1
     dc8:	0e 94 df 03 	call	0x7be	; 0x7be <string>



void cmd(unsigned char c)
{
	PORTC=c;
     dcc:	80 ec       	ldi	r24, 0xC0	; 192
     dce:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
     dd0:	db b8       	out	0x0b, r13	; 11
     dd2:	c8 01       	movw	r24, r16
     dd4:	01 97       	sbiw	r24, 0x01	; 1
     dd6:	f1 f7       	brne	.-4      	; 0xdd4 <main+0x2cc>
	_delay_ms(1);
	PORTD=0x00;
     dd8:	1b b8       	out	0x0b, r1	; 11
				cmd(0xC0);
				string("Vishal");
     dda:	89 e6       	ldi	r24, 0x69	; 105
     ddc:	91 e0       	ldi	r25, 0x01	; 1
     dde:	0e 94 df 03 	call	0x7be	; 0x7be <string>
     de2:	80 e3       	ldi	r24, 0x30	; 48
     de4:	95 e7       	ldi	r25, 0x75	; 117
     de6:	28 ec       	ldi	r18, 0xC8	; 200
     de8:	30 e0       	ldi	r19, 0x00	; 0
     dea:	f9 01       	movw	r30, r18
     dec:	31 97       	sbiw	r30, 0x01	; 1
     dee:	f1 f7       	brne	.-4      	; 0xdec <main+0x2e4>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     df0:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     df2:	d9 f7       	brne	.-10     	; 0xdea <main+0x2e2>
     df4:	fe ce       	rjmp	.-516    	; 0xbf2 <main+0xea>



void cmd(unsigned char c)
{
	PORTC=c;
     df6:	a8 b8       	out	0x08, r10	; 8
	PORTD=0x40;
     df8:	bb b8       	out	0x0b, r11	; 11
     dfa:	c7 01       	movw	r24, r14
     dfc:	01 97       	sbiw	r24, 0x01	; 1
     dfe:	f1 f7       	brne	.-4      	; 0xdfc <main+0x2f4>
	_delay_ms(1);
	PORTD=0x00;
     e00:	1b b8       	out	0x0b, r1	; 11



void cmd(unsigned char c)
{
	PORTC=c;
     e02:	80 e8       	ldi	r24, 0x80	; 128
     e04:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
     e06:	bb b8       	out	0x0b, r11	; 11
     e08:	c7 01       	movw	r24, r14
     e0a:	01 97       	sbiw	r24, 0x01	; 1
     e0c:	f1 f7       	brne	.-4      	; 0xe0a <main+0x302>
	_delay_ms(1);
	PORTD=0x00;
     e0e:	1b b8       	out	0x0b, r1	; 11
		  }
		  else
		  {
			cmd(0x01);
			cmd(0x80);
			string("Enter Password : ");
     e10:	83 e3       	ldi	r24, 0x33	; 51
     e12:	91 e0       	ldi	r25, 0x01	; 1
     e14:	0e 94 df 03 	call	0x7be	; 0x7be <string>



void cmd(unsigned char c)
{
	PORTC=c;
     e18:	80 ec       	ldi	r24, 0xC0	; 192
     e1a:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
     e1c:	bb b8       	out	0x0b, r11	; 11
     e1e:	c7 01       	movw	r24, r14
     e20:	01 97       	sbiw	r24, 0x01	; 1
     e22:	f1 f7       	brne	.-4      	; 0xe20 <main+0x318>
	_delay_ms(1);
	PORTD=0x00;
     e24:	1b b8       	out	0x0b, r1	; 11
			cmd(0xC0);
			string("Wrong Password");
     e26:	80 e7       	ldi	r24, 0x70	; 112
     e28:	91 e0       	ldi	r25, 0x01	; 1
     e2a:	0e 94 df 03 	call	0x7be	; 0x7be <string>
     e2e:	e7 ce       	rjmp	.-562    	; 0xbfe <main+0xf6>
		  }
		}
		else if(flag0==1)
     e30:	01 97       	sbiw	r24, 0x01	; 1
     e32:	09 f0       	breq	.+2      	; 0xe36 <main+0x32e>
     e34:	89 c1       	rjmp	.+786    	; 0x1148 <__stack+0x49>



void cmd(unsigned char c)
{
	PORTC=c;
     e36:	80 e8       	ldi	r24, 0x80	; 128
     e38:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
     e3a:	50 e4       	ldi	r21, 0x40	; 64
     e3c:	f5 2e       	mov	r15, r21
     e3e:	fb b8       	out	0x0b, r15	; 11
     e40:	00 ed       	ldi	r16, 0xD0	; 208
     e42:	17 e0       	ldi	r17, 0x07	; 7
     e44:	c8 01       	movw	r24, r16
     e46:	01 97       	sbiw	r24, 0x01	; 1
     e48:	f1 f7       	brne	.-4      	; 0xe46 <main+0x33e>
	_delay_ms(1);
	PORTD=0x00;
     e4a:	1b b8       	out	0x0b, r1	; 11
		{
			cmd(0x80);
			string("Password Match");
     e4c:	8f e7       	ldi	r24, 0x7F	; 127
     e4e:	91 e0       	ldi	r25, 0x01	; 1
     e50:	0e 94 df 03 	call	0x7be	; 0x7be <string>



void cmd(unsigned char c)
{
	PORTC=c;
     e54:	80 ec       	ldi	r24, 0xC0	; 192
     e56:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
     e58:	fb b8       	out	0x0b, r15	; 11
     e5a:	c8 01       	movw	r24, r16
     e5c:	01 97       	sbiw	r24, 0x01	; 1
     e5e:	f1 f7       	brne	.-4      	; 0xe5c <main+0x354>
	_delay_ms(1);
	PORTD=0x00;
     e60:	1b b8       	out	0x0b, r1	; 11
			cmd(0xC0);
			string("Put Finger >");
     e62:	8e e8       	ldi	r24, 0x8E	; 142
     e64:	91 e0       	ldi	r25, 0x01	; 1
     e66:	0e 94 df 03 	call	0x7be	; 0x7be <string>
     e6a:	80 e2       	ldi	r24, 0x20	; 32
     e6c:	9e e4       	ldi	r25, 0x4E	; 78
     e6e:	f4 01       	movw	r30, r8
     e70:	31 97       	sbiw	r30, 0x01	; 1
     e72:	f1 f7       	brne	.-4      	; 0xe70 <main+0x368>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e74:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e76:	d9 f7       	brne	.-10     	; 0xe6e <main+0x366>
     e78:	4e c0       	rjmp	.+156    	; 0xf16 <main+0x40e>
			_delay_ms(2000);
			while(one_time==0)
			{
				genimg();
     e7a:	0e 94 33 01 	call	0x266	; 0x266 <genimg>
     e7e:	88 e8       	ldi	r24, 0x88	; 136
     e80:	93 e1       	ldi	r25, 0x13	; 19
     e82:	f4 01       	movw	r30, r8
     e84:	31 97       	sbiw	r30, 0x01	; 1
     e86:	f1 f7       	brne	.-4      	; 0xe84 <main+0x37c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e88:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e8a:	d9 f7       	brne	.-10     	; 0xe82 <main+0x37a>
				_delay_ms(500);
				if(pk==1)
     e8c:	80 91 bc 02 	lds	r24, 0x02BC
     e90:	90 91 bd 02 	lds	r25, 0x02BD
     e94:	01 97       	sbiw	r24, 0x01	; 1
     e96:	09 f0       	breq	.+2      	; 0xe9a <main+0x392>
     e98:	48 c0       	rjmp	.+144    	; 0xf2a <main+0x422>
     e9a:	01 e0       	ldi	r16, 0x01	; 1
     e9c:	10 e0       	ldi	r17, 0x00	; 0
     e9e:	20 e0       	ldi	r18, 0x00	; 0
     ea0:	30 e0       	ldi	r19, 0x00	; 0
				{
					int match=1;
					for(int j=0; j<12; j++)
					{
						if(ack[j]!=genimg_ack[j])	match=0;
     ea2:	f9 01       	movw	r30, r18
     ea4:	e6 55       	subi	r30, 0x56	; 86
     ea6:	fd 4f       	sbci	r31, 0xFD	; 253
     ea8:	d9 01       	movw	r26, r18
     eaa:	ae 59       	subi	r26, 0x9E	; 158
     eac:	bd 4f       	sbci	r27, 0xFD	; 253
     eae:	90 81       	ld	r25, Z
     eb0:	8c 91       	ld	r24, X
     eb2:	98 17       	cp	r25, r24
     eb4:	11 f0       	breq	.+4      	; 0xeba <main+0x3b2>
     eb6:	00 e0       	ldi	r16, 0x00	; 0
     eb8:	10 e0       	ldi	r17, 0x00	; 0
				genimg();
				_delay_ms(500);
				if(pk==1)
				{
					int match=1;
					for(int j=0; j<12; j++)
     eba:	2f 5f       	subi	r18, 0xFF	; 255
     ebc:	3f 4f       	sbci	r19, 0xFF	; 255
     ebe:	2c 30       	cpi	r18, 0x0C	; 12
     ec0:	31 05       	cpc	r19, r1
     ec2:	79 f7       	brne	.-34     	; 0xea2 <main+0x39a>
					{
						if(ack[j]!=genimg_ack[j])	match=0;
					}
					if(match==1)
     ec4:	01 30       	cpi	r16, 0x01	; 1
     ec6:	11 05       	cpc	r17, r1
     ec8:	a9 f4       	brne	.+42     	; 0xef4 <main+0x3ec>



void cmd(unsigned char c)
{
	PORTC=c;
     eca:	b8 b8       	out	0x08, r11	; 8
	PORTD=0x40;
     ecc:	db b8       	out	0x0b, r13	; 11
     ece:	c7 01       	movw	r24, r14
     ed0:	01 97       	sbiw	r24, 0x01	; 1
     ed2:	f1 f7       	brne	.-4      	; 0xed0 <main+0x3c8>
	_delay_ms(1);
	PORTD=0x00;
     ed4:	1b b8       	out	0x0b, r1	; 11



void cmd(unsigned char c)
{
	PORTC=c;
     ed6:	c8 b8       	out	0x08, r12	; 8
	PORTD=0x40;
     ed8:	db b8       	out	0x0b, r13	; 11
     eda:	c7 01       	movw	r24, r14
     edc:	01 97       	sbiw	r24, 0x01	; 1
     ede:	f1 f7       	brne	.-4      	; 0xedc <main+0x3d4>
	_delay_ms(1);
	PORTD=0x00;
     ee0:	1b b8       	out	0x0b, r1	; 11
					{		
						cmd(0x01);
						cmd(0x80);
						string("Finger Collected");
     ee2:	8b e9       	ldi	r24, 0x9B	; 155
     ee4:	91 e0       	ldi	r25, 0x01	; 1
     ee6:	0e 94 df 03 	call	0x7be	; 0x7be <string>
						one_time=1;
     eea:	10 93 bb 02 	sts	0x02BB, r17
     eee:	00 93 ba 02 	sts	0x02BA, r16
     ef2:	1b c0       	rjmp	.+54     	; 0xf2a <main+0x422>



void cmd(unsigned char c)
{
	PORTC=c;
     ef4:	b8 b8       	out	0x08, r11	; 8
	PORTD=0x40;
     ef6:	db b8       	out	0x0b, r13	; 11
     ef8:	c7 01       	movw	r24, r14
     efa:	01 97       	sbiw	r24, 0x01	; 1
     efc:	f1 f7       	brne	.-4      	; 0xefa <main+0x3f2>
	_delay_ms(1);
	PORTD=0x00;
     efe:	1b b8       	out	0x0b, r1	; 11



void cmd(unsigned char c)
{
	PORTC=c;
     f00:	c8 b8       	out	0x08, r12	; 8
	PORTD=0x40;
     f02:	db b8       	out	0x0b, r13	; 11
     f04:	c7 01       	movw	r24, r14
     f06:	01 97       	sbiw	r24, 0x01	; 1
     f08:	f1 f7       	brne	.-4      	; 0xf06 <main+0x3fe>
	_delay_ms(1);
	PORTD=0x00;
     f0a:	1b b8       	out	0x0b, r1	; 11
					}
					else
					{
						cmd(0x01);
						cmd(0x80);
						string("No Finger");	
     f0c:	8c ea       	ldi	r24, 0xAC	; 172
     f0e:	91 e0       	ldi	r25, 0x01	; 1
     f10:	0e 94 df 03 	call	0x7be	; 0x7be <string>
     f14:	0a c0       	rjmp	.+20     	; 0xf2a <main+0x422>



void cmd(unsigned char c)
{
	PORTC=c;
     f16:	bb 24       	eor	r11, r11
     f18:	b3 94       	inc	r11
	PORTD=0x40;
     f1a:	40 e4       	ldi	r20, 0x40	; 64
     f1c:	d4 2e       	mov	r13, r20
     f1e:	30 ed       	ldi	r19, 0xD0	; 208
     f20:	e3 2e       	mov	r14, r19
     f22:	37 e0       	ldi	r19, 0x07	; 7
     f24:	f3 2e       	mov	r15, r19



void cmd(unsigned char c)
{
	PORTC=c;
     f26:	20 e8       	ldi	r18, 0x80	; 128
     f28:	c2 2e       	mov	r12, r18
			cmd(0x80);
			string("Password Match");
			cmd(0xC0);
			string("Put Finger >");
			_delay_ms(2000);
			while(one_time==0)
     f2a:	80 91 ba 02 	lds	r24, 0x02BA
     f2e:	90 91 bb 02 	lds	r25, 0x02BB
     f32:	89 2b       	or	r24, r25
     f34:	09 f4       	brne	.+2      	; 0xf38 <main+0x430>
     f36:	a1 cf       	rjmp	.-190    	; 0xe7a <main+0x372>
						cmd(0x80);
						string("No Finger");	
					}
				}
			}
			genchar1();
     f38:	0e 94 8f 01 	call	0x31e	; 0x31e <genchar1>
     f3c:	88 e8       	ldi	r24, 0x88	; 136
     f3e:	93 e1       	ldi	r25, 0x13	; 19
     f40:	f4 01       	movw	r30, r8
     f42:	31 97       	sbiw	r30, 0x01	; 1
     f44:	f1 f7       	brne	.-4      	; 0xf42 <main+0x43a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f46:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f48:	d9 f7       	brne	.-10     	; 0xf40 <main+0x438>
			_delay_ms(500);
			
			gentemp();
     f4a:	0e 94 55 02 	call	0x4aa	; 0x4aa <gentemp>
     f4e:	88 e8       	ldi	r24, 0x88	; 136
     f50:	93 e1       	ldi	r25, 0x13	; 19
     f52:	f4 01       	movw	r30, r8
     f54:	31 97       	sbiw	r30, 0x01	; 1
     f56:	f1 f7       	brne	.-4      	; 0xf54 <main+0x44c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f58:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f5a:	d9 f7       	brne	.-10     	; 0xf52 <main+0x44a>
     f5c:	dd 24       	eor	r13, r13
     f5e:	d3 94       	inc	r13
     f60:	d8 b8       	out	0x08, r13	; 8
	PORTD=0x40;
     f62:	90 e4       	ldi	r25, 0x40	; 64
     f64:	f9 2e       	mov	r15, r25
     f66:	fb b8       	out	0x0b, r15	; 11
     f68:	00 ed       	ldi	r16, 0xD0	; 208
     f6a:	17 e0       	ldi	r17, 0x07	; 7
     f6c:	c8 01       	movw	r24, r16
     f6e:	01 97       	sbiw	r24, 0x01	; 1
     f70:	f1 f7       	brne	.-4      	; 0xf6e <main+0x466>
	_delay_ms(1);
	PORTD=0x00;
     f72:	1b b8       	out	0x0b, r1	; 11



void cmd(unsigned char c)
{
	PORTC=c;
     f74:	80 e8       	ldi	r24, 0x80	; 128
     f76:	e8 2e       	mov	r14, r24
     f78:	e8 b8       	out	0x08, r14	; 8
	PORTD=0x40;
     f7a:	fb b8       	out	0x0b, r15	; 11
     f7c:	c8 01       	movw	r24, r16
     f7e:	01 97       	sbiw	r24, 0x01	; 1
     f80:	f1 f7       	brne	.-4      	; 0xf7e <main+0x476>
	_delay_ms(1);
	PORTD=0x00;
     f82:	1b b8       	out	0x0b, r1	; 11
			_delay_ms(500);
			
			cmd(0x01);
			cmd(0x80);
			string("searching");
     f84:	86 eb       	ldi	r24, 0xB6	; 182
     f86:	91 e0       	ldi	r25, 0x01	; 1
     f88:	0e 94 df 03 	call	0x7be	; 0x7be <string>
			searchfing();
     f8c:	0e 94 b1 02 	call	0x562	; 0x562 <searchfing>



void cmd(unsigned char c)
{
	PORTC=c;
     f90:	d8 b8       	out	0x08, r13	; 8
	PORTD=0x40;
     f92:	fb b8       	out	0x0b, r15	; 11
     f94:	c8 01       	movw	r24, r16
     f96:	01 97       	sbiw	r24, 0x01	; 1
     f98:	f1 f7       	brne	.-4      	; 0xf96 <main+0x48e>
	_delay_ms(1);
	PORTD=0x00;
     f9a:	1b b8       	out	0x0b, r1	; 11



void cmd(unsigned char c)
{
	PORTC=c;
     f9c:	e8 b8       	out	0x08, r14	; 8
	PORTD=0x40;
     f9e:	fb b8       	out	0x0b, r15	; 11
     fa0:	c8 01       	movw	r24, r16
     fa2:	01 97       	sbiw	r24, 0x01	; 1
     fa4:	f1 f7       	brne	.-4      	; 0xfa2 <main+0x49a>
	_delay_ms(1);
	PORTD=0x00;
     fa6:	1b b8       	out	0x0b, r1	; 11
			
			cmd(0x01);
			cmd(0x80);
			t = ack[11] % 100;
     fa8:	80 91 b5 02 	lds	r24, 0x02B5
     fac:	64 e6       	ldi	r22, 0x64	; 100
     fae:	0e 94 36 0a 	call	0x146c	; 0x146c <__udivmodqi4>
     fb2:	29 2f       	mov	r18, r25
			t1=(t/10)+48;
			t2=(t % 10)+48;
     fb4:	89 2f       	mov	r24, r25
     fb6:	90 e0       	ldi	r25, 0x00	; 0
     fb8:	6a e0       	ldi	r22, 0x0A	; 10
     fba:	70 e0       	ldi	r23, 0x00	; 0
     fbc:	0e 94 42 0a 	call	0x1484	; 0x1484 <__udivmodhi4>
     fc0:	8c 01       	movw	r16, r24
     fc2:	00 5d       	subi	r16, 0xD0	; 208
     fc4:	1f 4f       	sbci	r17, 0xFF	; 255
			data(t1);
     fc6:	82 2f       	mov	r24, r18
     fc8:	90 e0       	ldi	r25, 0x00	; 0
     fca:	6a e0       	ldi	r22, 0x0A	; 10
     fcc:	70 e0       	ldi	r23, 0x00	; 0
     fce:	0e 94 42 0a 	call	0x1484	; 0x1484 <__udivmodhi4>
     fd2:	86 2f       	mov	r24, r22
     fd4:	80 5d       	subi	r24, 0xD0	; 208
     fd6:	0e 94 c6 03 	call	0x78c	; 0x78c <data>
			data(t2);
     fda:	80 2f       	mov	r24, r16
     fdc:	0e 94 c6 03 	call	0x78c	; 0x78c <data>
     fe0:	88 e8       	ldi	r24, 0x88	; 136
     fe2:	93 e1       	ldi	r25, 0x13	; 19
     fe4:	f4 01       	movw	r30, r8
     fe6:	31 97       	sbiw	r30, 0x01	; 1
     fe8:	f1 f7       	brne	.-4      	; 0xfe6 <main+0x4de>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     fea:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     fec:	d9 f7       	brne	.-10     	; 0xfe4 <main+0x4dc>
			_delay_ms(500);
			
				
				if(t2=='1')
     fee:	01 33       	cpi	r16, 0x31	; 49
     ff0:	11 05       	cpc	r17, r1
     ff2:	49 f5       	brne	.+82     	; 0x1046 <main+0x53e>



void cmd(unsigned char c)
{
	PORTC=c;
     ff4:	81 e0       	ldi	r24, 0x01	; 1
     ff6:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
     ff8:	00 e4       	ldi	r16, 0x40	; 64
     ffa:	f0 2e       	mov	r15, r16
     ffc:	fb b8       	out	0x0b, r15	; 11
     ffe:	00 ed       	ldi	r16, 0xD0	; 208
    1000:	17 e0       	ldi	r17, 0x07	; 7
    1002:	c8 01       	movw	r24, r16
    1004:	01 97       	sbiw	r24, 0x01	; 1
    1006:	f1 f7       	brne	.-4      	; 0x1004 <main+0x4fc>
	_delay_ms(1);
	PORTD=0x00;
    1008:	1b b8       	out	0x0b, r1	; 11



void cmd(unsigned char c)
{
	PORTC=c;
    100a:	80 e8       	ldi	r24, 0x80	; 128
    100c:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    100e:	fb b8       	out	0x0b, r15	; 11
    1010:	c8 01       	movw	r24, r16
    1012:	01 97       	sbiw	r24, 0x01	; 1
    1014:	f1 f7       	brne	.-4      	; 0x1012 <main+0x50a>
	_delay_ms(1);
	PORTD=0x00;
    1016:	1b b8       	out	0x0b, r1	; 11
				{
					cmd(0x01);
					cmd(0x80);
					string("Finger matched");
    1018:	80 ec       	ldi	r24, 0xC0	; 192
    101a:	91 e0       	ldi	r25, 0x01	; 1
    101c:	0e 94 df 03 	call	0x7be	; 0x7be <string>



void cmd(unsigned char c)
{
	PORTC=c;
    1020:	80 ec       	ldi	r24, 0xC0	; 192
    1022:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    1024:	fb b8       	out	0x0b, r15	; 11
    1026:	c8 01       	movw	r24, r16
    1028:	01 97       	sbiw	r24, 0x01	; 1
    102a:	f1 f7       	brne	.-4      	; 0x1028 <main+0x520>
	_delay_ms(1);
	PORTD=0x00;
    102c:	1b b8       	out	0x0b, r1	; 11
					cmd(0xC0);
					string("with onkar");
    102e:	8f ec       	ldi	r24, 0xCF	; 207
    1030:	91 e0       	ldi	r25, 0x01	; 1
    1032:	0e 94 df 03 	call	0x7be	; 0x7be <string>
    1036:	80 e3       	ldi	r24, 0x30	; 48
    1038:	95 e7       	ldi	r25, 0x75	; 117
    103a:	f4 01       	movw	r30, r8
    103c:	31 97       	sbiw	r30, 0x01	; 1
    103e:	f1 f7       	brne	.-4      	; 0x103c <main+0x534>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1040:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1042:	d9 f7       	brne	.-10     	; 0x103a <main+0x532>
    1044:	d0 cd       	rjmp	.-1120   	; 0xbe6 <main+0xde>
					flag1=1;
					flag0=0;
					_delay_ms(3000);
				}
				else if(t2=='2')
    1046:	02 33       	cpi	r16, 0x32	; 50
    1048:	11 05       	cpc	r17, r1
    104a:	49 f5       	brne	.+82     	; 0x109e <main+0x596>



void cmd(unsigned char c)
{
	PORTC=c;
    104c:	81 e0       	ldi	r24, 0x01	; 1
    104e:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    1050:	10 e4       	ldi	r17, 0x40	; 64
    1052:	f1 2e       	mov	r15, r17
    1054:	fb b8       	out	0x0b, r15	; 11
    1056:	00 ed       	ldi	r16, 0xD0	; 208
    1058:	17 e0       	ldi	r17, 0x07	; 7
    105a:	c8 01       	movw	r24, r16
    105c:	01 97       	sbiw	r24, 0x01	; 1
    105e:	f1 f7       	brne	.-4      	; 0x105c <main+0x554>
	_delay_ms(1);
	PORTD=0x00;
    1060:	1b b8       	out	0x0b, r1	; 11



void cmd(unsigned char c)
{
	PORTC=c;
    1062:	80 e8       	ldi	r24, 0x80	; 128
    1064:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    1066:	fb b8       	out	0x0b, r15	; 11
    1068:	c8 01       	movw	r24, r16
    106a:	01 97       	sbiw	r24, 0x01	; 1
    106c:	f1 f7       	brne	.-4      	; 0x106a <main+0x562>
	_delay_ms(1);
	PORTD=0x00;
    106e:	1b b8       	out	0x0b, r1	; 11
				{
					cmd(0x01);
					cmd(0x80);
					string("Finger matched");
    1070:	80 ec       	ldi	r24, 0xC0	; 192
    1072:	91 e0       	ldi	r25, 0x01	; 1
    1074:	0e 94 df 03 	call	0x7be	; 0x7be <string>



void cmd(unsigned char c)
{
	PORTC=c;
    1078:	80 ec       	ldi	r24, 0xC0	; 192
    107a:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    107c:	fb b8       	out	0x0b, r15	; 11
    107e:	c8 01       	movw	r24, r16
    1080:	01 97       	sbiw	r24, 0x01	; 1
    1082:	f1 f7       	brne	.-4      	; 0x1080 <main+0x578>
	_delay_ms(1);
	PORTD=0x00;
    1084:	1b b8       	out	0x0b, r1	; 11
					
					cmd(0xC0);
					string("with vishal");
    1086:	8a ed       	ldi	r24, 0xDA	; 218
    1088:	91 e0       	ldi	r25, 0x01	; 1
    108a:	0e 94 df 03 	call	0x7be	; 0x7be <string>
    108e:	80 e3       	ldi	r24, 0x30	; 48
    1090:	95 e7       	ldi	r25, 0x75	; 117
    1092:	f4 01       	movw	r30, r8
    1094:	31 97       	sbiw	r30, 0x01	; 1
    1096:	f1 f7       	brne	.-4      	; 0x1094 <main+0x58c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1098:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    109a:	d9 f7       	brne	.-10     	; 0x1092 <main+0x58a>
    109c:	a4 cd       	rjmp	.-1208   	; 0xbe6 <main+0xde>
					flag1=1;
					flag0=0;
					_delay_ms(3000);
				}
				else if(t2=='3')
    109e:	03 33       	cpi	r16, 0x33	; 51
    10a0:	11 05       	cpc	r17, r1
    10a2:	49 f5       	brne	.+82     	; 0x10f6 <main+0x5ee>



void cmd(unsigned char c)
{
	PORTC=c;
    10a4:	81 e0       	ldi	r24, 0x01	; 1
    10a6:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    10a8:	b0 e4       	ldi	r27, 0x40	; 64
    10aa:	fb 2e       	mov	r15, r27
    10ac:	fb b8       	out	0x0b, r15	; 11
    10ae:	00 ed       	ldi	r16, 0xD0	; 208
    10b0:	17 e0       	ldi	r17, 0x07	; 7
    10b2:	c8 01       	movw	r24, r16
    10b4:	01 97       	sbiw	r24, 0x01	; 1
    10b6:	f1 f7       	brne	.-4      	; 0x10b4 <main+0x5ac>
	_delay_ms(1);
	PORTD=0x00;
    10b8:	1b b8       	out	0x0b, r1	; 11



void cmd(unsigned char c)
{
	PORTC=c;
    10ba:	80 e8       	ldi	r24, 0x80	; 128
    10bc:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    10be:	fb b8       	out	0x0b, r15	; 11
    10c0:	c8 01       	movw	r24, r16
    10c2:	01 97       	sbiw	r24, 0x01	; 1
    10c4:	f1 f7       	brne	.-4      	; 0x10c2 <main+0x5ba>
	_delay_ms(1);
	PORTD=0x00;
    10c6:	1b b8       	out	0x0b, r1	; 11
				{
					cmd(0x01);
					cmd(0x80);
					string("Finger matched");
    10c8:	80 ec       	ldi	r24, 0xC0	; 192
    10ca:	91 e0       	ldi	r25, 0x01	; 1
    10cc:	0e 94 df 03 	call	0x7be	; 0x7be <string>



void cmd(unsigned char c)
{
	PORTC=c;
    10d0:	80 ec       	ldi	r24, 0xC0	; 192
    10d2:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    10d4:	fb b8       	out	0x0b, r15	; 11
    10d6:	c8 01       	movw	r24, r16
    10d8:	01 97       	sbiw	r24, 0x01	; 1
    10da:	f1 f7       	brne	.-4      	; 0x10d8 <main+0x5d0>
	_delay_ms(1);
	PORTD=0x00;
    10dc:	1b b8       	out	0x0b, r1	; 11
					
					cmd(0xC0);
					string("with shravan");
    10de:	86 ee       	ldi	r24, 0xE6	; 230
    10e0:	91 e0       	ldi	r25, 0x01	; 1
    10e2:	0e 94 df 03 	call	0x7be	; 0x7be <string>
    10e6:	80 e3       	ldi	r24, 0x30	; 48
    10e8:	95 e7       	ldi	r25, 0x75	; 117
    10ea:	f4 01       	movw	r30, r8
    10ec:	31 97       	sbiw	r30, 0x01	; 1
    10ee:	f1 f7       	brne	.-4      	; 0x10ec <main+0x5e4>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10f0:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10f2:	d9 f7       	brne	.-10     	; 0x10ea <main+0x5e2>
    10f4:	78 cd       	rjmp	.-1296   	; 0xbe6 <main+0xde>



void cmd(unsigned char c)
{
	PORTC=c;
    10f6:	81 e0       	ldi	r24, 0x01	; 1
    10f8:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    10fa:	a0 e4       	ldi	r26, 0x40	; 64
    10fc:	fa 2e       	mov	r15, r26
    10fe:	fb b8       	out	0x0b, r15	; 11
    1100:	00 ed       	ldi	r16, 0xD0	; 208
    1102:	17 e0       	ldi	r17, 0x07	; 7
    1104:	c8 01       	movw	r24, r16
    1106:	01 97       	sbiw	r24, 0x01	; 1
    1108:	f1 f7       	brne	.-4      	; 0x1106 <__stack+0x7>
	_delay_ms(1);
	PORTD=0x00;
    110a:	1b b8       	out	0x0b, r1	; 11



void cmd(unsigned char c)
{
	PORTC=c;
    110c:	80 e8       	ldi	r24, 0x80	; 128
    110e:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    1110:	fb b8       	out	0x0b, r15	; 11
    1112:	c8 01       	movw	r24, r16
    1114:	01 97       	sbiw	r24, 0x01	; 1
    1116:	f1 f7       	brne	.-4      	; 0x1114 <__stack+0x15>
	_delay_ms(1);
	PORTD=0x00;
    1118:	1b b8       	out	0x0b, r1	; 11
				}
				else
				{
				cmd(0x01);
				cmd(0x80);
				string("Finger Not");
    111a:	83 ef       	ldi	r24, 0xF3	; 243
    111c:	91 e0       	ldi	r25, 0x01	; 1
    111e:	0e 94 df 03 	call	0x7be	; 0x7be <string>



void cmd(unsigned char c)
{
	PORTC=c;
    1122:	80 ec       	ldi	r24, 0xC0	; 192
    1124:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    1126:	fb b8       	out	0x0b, r15	; 11
    1128:	c8 01       	movw	r24, r16
    112a:	01 97       	sbiw	r24, 0x01	; 1
    112c:	f1 f7       	brne	.-4      	; 0x112a <__stack+0x2b>
	_delay_ms(1);
	PORTD=0x00;
    112e:	1b b8       	out	0x0b, r1	; 11
				cmd(0xC0);
				string("Matched");
    1130:	8e ef       	ldi	r24, 0xFE	; 254
    1132:	91 e0       	ldi	r25, 0x01	; 1
    1134:	0e 94 df 03 	call	0x7be	; 0x7be <string>
    1138:	80 e2       	ldi	r24, 0x20	; 32
    113a:	9e e4       	ldi	r25, 0x4E	; 78
    113c:	f4 01       	movw	r30, r8
    113e:	31 97       	sbiw	r30, 0x01	; 1
    1140:	f1 f7       	brne	.-4      	; 0x113e <__stack+0x3f>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1142:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1144:	d9 f7       	brne	.-10     	; 0x113c <__stack+0x3d>
    1146:	8f c1       	rjmp	.+798    	; 0x1466 <__stack+0x367>
				flag0=0;
				_delay_ms(2000);
				}
		}
		else if(flag1==1)
    1148:	81 e0       	ldi	r24, 0x01	; 1
    114a:	68 16       	cp	r6, r24
    114c:	71 04       	cpc	r7, r1
    114e:	09 f0       	breq	.+2      	; 0x1152 <__stack+0x53>
    1150:	8a c1       	rjmp	.+788    	; 0x1466 <__stack+0x367>



void cmd(unsigned char c)
{
	PORTC=c;
    1152:	81 e0       	ldi	r24, 0x01	; 1
    1154:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    1156:	f0 e4       	ldi	r31, 0x40	; 64
    1158:	ff 2e       	mov	r15, r31
    115a:	fb b8       	out	0x0b, r15	; 11
    115c:	00 ed       	ldi	r16, 0xD0	; 208
    115e:	17 e0       	ldi	r17, 0x07	; 7
    1160:	c8 01       	movw	r24, r16
    1162:	01 97       	sbiw	r24, 0x01	; 1
    1164:	f1 f7       	brne	.-4      	; 0x1162 <__stack+0x63>
	_delay_ms(1);
	PORTD=0x00;
    1166:	1b b8       	out	0x0b, r1	; 11



void cmd(unsigned char c)
{
	PORTC=c;
    1168:	80 e8       	ldi	r24, 0x80	; 128
    116a:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    116c:	fb b8       	out	0x0b, r15	; 11
    116e:	c8 01       	movw	r24, r16
    1170:	01 97       	sbiw	r24, 0x01	; 1
    1172:	f1 f7       	brne	.-4      	; 0x1170 <__stack+0x71>
	_delay_ms(1);
	PORTD=0x00;
    1174:	1b b8       	out	0x0b, r1	; 11
		{
			cmd(0x01);
			cmd(0x80);
			string("Waiting for");
    1176:	86 e0       	ldi	r24, 0x06	; 6
    1178:	92 e0       	ldi	r25, 0x02	; 2
    117a:	0e 94 df 03 	call	0x7be	; 0x7be <string>



void cmd(unsigned char c)
{
	PORTC=c;
    117e:	80 ec       	ldi	r24, 0xC0	; 192
    1180:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    1182:	fb b8       	out	0x0b, r15	; 11
    1184:	c8 01       	movw	r24, r16
    1186:	01 97       	sbiw	r24, 0x01	; 1
    1188:	f1 f7       	brne	.-4      	; 0x1186 <__stack+0x87>
	_delay_ms(1);
	PORTD=0x00;
    118a:	1b b8       	out	0x0b, r1	; 11
			cmd(0xC0);
			string("face ID...");
    118c:	82 e1       	ldi	r24, 0x12	; 18
    118e:	92 e0       	ldi	r25, 0x02	; 2
    1190:	0e 94 df 03 	call	0x7be	; 0x7be <string>
    1194:	8f ef       	ldi	r24, 0xFF	; 255
    1196:	9f ef       	ldi	r25, 0xFF	; 255
    1198:	f4 01       	movw	r30, r8
    119a:	31 97       	sbiw	r30, 0x01	; 1
    119c:	f1 f7       	brne	.-4      	; 0x119a <__stack+0x9b>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    119e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    11a0:	d9 f7       	brne	.-10     	; 0x1198 <__stack+0x99>
			_delay_ms(10000);
			while(dk==0);
    11a2:	80 91 be 02 	lds	r24, 0x02BE
    11a6:	90 91 bf 02 	lds	r25, 0x02BF
    11aa:	89 2b       	or	r24, r25
    11ac:	d1 f3       	breq	.-12     	; 0x11a2 <__stack+0xa3>
			if(dk=='1')
    11ae:	80 91 be 02 	lds	r24, 0x02BE
    11b2:	90 91 bf 02 	lds	r25, 0x02BF
    11b6:	c1 97       	sbiw	r24, 0x31	; 49
    11b8:	09 f0       	breq	.+2      	; 0x11bc <__stack+0xbd>
    11ba:	55 c0       	rjmp	.+170    	; 0x1266 <__stack+0x167>



void cmd(unsigned char c)
{
	PORTC=c;
    11bc:	81 e0       	ldi	r24, 0x01	; 1
    11be:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    11c0:	e0 e4       	ldi	r30, 0x40	; 64
    11c2:	fe 2e       	mov	r15, r30
    11c4:	fb b8       	out	0x0b, r15	; 11
    11c6:	00 ed       	ldi	r16, 0xD0	; 208
    11c8:	17 e0       	ldi	r17, 0x07	; 7
    11ca:	c8 01       	movw	r24, r16
    11cc:	01 97       	sbiw	r24, 0x01	; 1
    11ce:	f1 f7       	brne	.-4      	; 0x11cc <__stack+0xcd>
	_delay_ms(1);
	PORTD=0x00;
    11d0:	1b b8       	out	0x0b, r1	; 11



void cmd(unsigned char c)
{
	PORTC=c;
    11d2:	80 e8       	ldi	r24, 0x80	; 128
    11d4:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    11d6:	fb b8       	out	0x0b, r15	; 11
    11d8:	c8 01       	movw	r24, r16
    11da:	01 97       	sbiw	r24, 0x01	; 1
    11dc:	f1 f7       	brne	.-4      	; 0x11da <__stack+0xdb>
	_delay_ms(1);
	PORTD=0x00;
    11de:	1b b8       	out	0x0b, r1	; 11
			{
				cmd(0x01);
				cmd(0x80);
				string("Face Match");
    11e0:	8d e1       	ldi	r24, 0x1D	; 29
    11e2:	92 e0       	ldi	r25, 0x02	; 2
    11e4:	0e 94 df 03 	call	0x7be	; 0x7be <string>



void cmd(unsigned char c)
{
	PORTC=c;
    11e8:	80 ec       	ldi	r24, 0xC0	; 192
    11ea:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    11ec:	fb b8       	out	0x0b, r15	; 11
    11ee:	c8 01       	movw	r24, r16
    11f0:	01 97       	sbiw	r24, 0x01	; 1
    11f2:	f1 f7       	brne	.-4      	; 0x11f0 <__stack+0xf1>
	_delay_ms(1);
	PORTD=0x00;
    11f4:	1b b8       	out	0x0b, r1	; 11
				cmd(0xC0);
				string("with Onkar");
    11f6:	88 e2       	ldi	r24, 0x28	; 40
    11f8:	92 e0       	ldi	r25, 0x02	; 2
    11fa:	0e 94 df 03 	call	0x7be	; 0x7be <string>
    11fe:	80 e2       	ldi	r24, 0x20	; 32
    1200:	9e e4       	ldi	r25, 0x4E	; 78
    1202:	28 ec       	ldi	r18, 0xC8	; 200
    1204:	30 e0       	ldi	r19, 0x00	; 0
    1206:	f9 01       	movw	r30, r18
    1208:	31 97       	sbiw	r30, 0x01	; 1
    120a:	f1 f7       	brne	.-4      	; 0x1208 <__stack+0x109>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    120c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    120e:	d9 f7       	brne	.-10     	; 0x1206 <__stack+0x107>



void cmd(unsigned char c)
{
	PORTC=c;
    1210:	81 e0       	ldi	r24, 0x01	; 1
    1212:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    1214:	70 e4       	ldi	r23, 0x40	; 64
    1216:	f7 2e       	mov	r15, r23
    1218:	fb b8       	out	0x0b, r15	; 11
    121a:	00 ed       	ldi	r16, 0xD0	; 208
    121c:	17 e0       	ldi	r17, 0x07	; 7
    121e:	c8 01       	movw	r24, r16
    1220:	01 97       	sbiw	r24, 0x01	; 1
    1222:	f1 f7       	brne	.-4      	; 0x1220 <__stack+0x121>
	_delay_ms(1);
	PORTD=0x00;
    1224:	1b b8       	out	0x0b, r1	; 11



void cmd(unsigned char c)
{
	PORTC=c;
    1226:	80 e8       	ldi	r24, 0x80	; 128
    1228:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    122a:	fb b8       	out	0x0b, r15	; 11
    122c:	c8 01       	movw	r24, r16
    122e:	01 97       	sbiw	r24, 0x01	; 1
    1230:	f1 f7       	brne	.-4      	; 0x122e <__stack+0x12f>
	_delay_ms(1);
	PORTD=0x00;
    1232:	1b b8       	out	0x0b, r1	; 11
				_delay_ms(2000);
				cmd(0x01);
				cmd(0x80);
				string("Access");
    1234:	83 e3       	ldi	r24, 0x33	; 51
    1236:	92 e0       	ldi	r25, 0x02	; 2
    1238:	0e 94 df 03 	call	0x7be	; 0x7be <string>



void cmd(unsigned char c)
{
	PORTC=c;
    123c:	80 ec       	ldi	r24, 0xC0	; 192
    123e:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    1240:	fb b8       	out	0x0b, r15	; 11
    1242:	c8 01       	movw	r24, r16
    1244:	01 97       	sbiw	r24, 0x01	; 1
    1246:	f1 f7       	brne	.-4      	; 0x1244 <__stack+0x145>
	_delay_ms(1);
	PORTD=0x00;
    1248:	1b b8       	out	0x0b, r1	; 11
				cmd(0xC0);
				string("Granted");
    124a:	8a e3       	ldi	r24, 0x3A	; 58
    124c:	92 e0       	ldi	r25, 0x02	; 2
    124e:	0e 94 df 03 	call	0x7be	; 0x7be <string>
    1252:	80 e2       	ldi	r24, 0x20	; 32
    1254:	9e e4       	ldi	r25, 0x4E	; 78
    1256:	28 ec       	ldi	r18, 0xC8	; 200
    1258:	30 e0       	ldi	r19, 0x00	; 0
    125a:	f9 01       	movw	r30, r18
    125c:	31 97       	sbiw	r30, 0x01	; 1
    125e:	f1 f7       	brne	.-4      	; 0x125c <__stack+0x15d>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1260:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1262:	d9 f7       	brne	.-10     	; 0x125a <__stack+0x15b>
    1264:	b7 c0       	rjmp	.+366    	; 0x13d4 <__stack+0x2d5>
				_delay_ms(2000);
				PORTB=0xA0;
				flag1=0;
				flag=0;
			}
			else if(dk=='2')
    1266:	80 91 be 02 	lds	r24, 0x02BE
    126a:	90 91 bf 02 	lds	r25, 0x02BF
    126e:	c2 97       	sbiw	r24, 0x32	; 50
    1270:	09 f0       	breq	.+2      	; 0x1274 <__stack+0x175>
    1272:	55 c0       	rjmp	.+170    	; 0x131e <__stack+0x21f>



void cmd(unsigned char c)
{
	PORTC=c;
    1274:	81 e0       	ldi	r24, 0x01	; 1
    1276:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    1278:	60 e4       	ldi	r22, 0x40	; 64
    127a:	f6 2e       	mov	r15, r22
    127c:	fb b8       	out	0x0b, r15	; 11
    127e:	00 ed       	ldi	r16, 0xD0	; 208
    1280:	17 e0       	ldi	r17, 0x07	; 7
    1282:	c8 01       	movw	r24, r16
    1284:	01 97       	sbiw	r24, 0x01	; 1
    1286:	f1 f7       	brne	.-4      	; 0x1284 <__stack+0x185>
	_delay_ms(1);
	PORTD=0x00;
    1288:	1b b8       	out	0x0b, r1	; 11



void cmd(unsigned char c)
{
	PORTC=c;
    128a:	80 e8       	ldi	r24, 0x80	; 128
    128c:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    128e:	fb b8       	out	0x0b, r15	; 11
    1290:	c8 01       	movw	r24, r16
    1292:	01 97       	sbiw	r24, 0x01	; 1
    1294:	f1 f7       	brne	.-4      	; 0x1292 <__stack+0x193>
	_delay_ms(1);
	PORTD=0x00;
    1296:	1b b8       	out	0x0b, r1	; 11
			{
				cmd(0x01);
				cmd(0x80);
				string("Face Match");
    1298:	8d e1       	ldi	r24, 0x1D	; 29
    129a:	92 e0       	ldi	r25, 0x02	; 2
    129c:	0e 94 df 03 	call	0x7be	; 0x7be <string>



void cmd(unsigned char c)
{
	PORTC=c;
    12a0:	80 ec       	ldi	r24, 0xC0	; 192
    12a2:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    12a4:	fb b8       	out	0x0b, r15	; 11
    12a6:	c8 01       	movw	r24, r16
    12a8:	01 97       	sbiw	r24, 0x01	; 1
    12aa:	f1 f7       	brne	.-4      	; 0x12a8 <__stack+0x1a9>
	_delay_ms(1);
	PORTD=0x00;
    12ac:	1b b8       	out	0x0b, r1	; 11
				cmd(0xC0);
				string("with vishal");
    12ae:	8a ed       	ldi	r24, 0xDA	; 218
    12b0:	91 e0       	ldi	r25, 0x01	; 1
    12b2:	0e 94 df 03 	call	0x7be	; 0x7be <string>
    12b6:	80 e2       	ldi	r24, 0x20	; 32
    12b8:	9e e4       	ldi	r25, 0x4E	; 78
    12ba:	28 ec       	ldi	r18, 0xC8	; 200
    12bc:	30 e0       	ldi	r19, 0x00	; 0
    12be:	f9 01       	movw	r30, r18
    12c0:	31 97       	sbiw	r30, 0x01	; 1
    12c2:	f1 f7       	brne	.-4      	; 0x12c0 <__stack+0x1c1>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    12c4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    12c6:	d9 f7       	brne	.-10     	; 0x12be <__stack+0x1bf>



void cmd(unsigned char c)
{
	PORTC=c;
    12c8:	81 e0       	ldi	r24, 0x01	; 1
    12ca:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    12cc:	50 e4       	ldi	r21, 0x40	; 64
    12ce:	f5 2e       	mov	r15, r21
    12d0:	fb b8       	out	0x0b, r15	; 11
    12d2:	00 ed       	ldi	r16, 0xD0	; 208
    12d4:	17 e0       	ldi	r17, 0x07	; 7
    12d6:	c8 01       	movw	r24, r16
    12d8:	01 97       	sbiw	r24, 0x01	; 1
    12da:	f1 f7       	brne	.-4      	; 0x12d8 <__stack+0x1d9>
	_delay_ms(1);
	PORTD=0x00;
    12dc:	1b b8       	out	0x0b, r1	; 11



void cmd(unsigned char c)
{
	PORTC=c;
    12de:	80 e8       	ldi	r24, 0x80	; 128
    12e0:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    12e2:	fb b8       	out	0x0b, r15	; 11
    12e4:	c8 01       	movw	r24, r16
    12e6:	01 97       	sbiw	r24, 0x01	; 1
    12e8:	f1 f7       	brne	.-4      	; 0x12e6 <__stack+0x1e7>
	_delay_ms(1);
	PORTD=0x00;
    12ea:	1b b8       	out	0x0b, r1	; 11
				_delay_ms(2000);
				cmd(0x01);
				cmd(0x80);
				string("Access");
    12ec:	83 e3       	ldi	r24, 0x33	; 51
    12ee:	92 e0       	ldi	r25, 0x02	; 2
    12f0:	0e 94 df 03 	call	0x7be	; 0x7be <string>



void cmd(unsigned char c)
{
	PORTC=c;
    12f4:	80 ec       	ldi	r24, 0xC0	; 192
    12f6:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    12f8:	fb b8       	out	0x0b, r15	; 11
    12fa:	c8 01       	movw	r24, r16
    12fc:	01 97       	sbiw	r24, 0x01	; 1
    12fe:	f1 f7       	brne	.-4      	; 0x12fc <__stack+0x1fd>
	_delay_ms(1);
	PORTD=0x00;
    1300:	1b b8       	out	0x0b, r1	; 11
				cmd(0xC0);
				string("Granted");
    1302:	8a e3       	ldi	r24, 0x3A	; 58
    1304:	92 e0       	ldi	r25, 0x02	; 2
    1306:	0e 94 df 03 	call	0x7be	; 0x7be <string>
    130a:	80 e2       	ldi	r24, 0x20	; 32
    130c:	9e e4       	ldi	r25, 0x4E	; 78
    130e:	28 ec       	ldi	r18, 0xC8	; 200
    1310:	30 e0       	ldi	r19, 0x00	; 0
    1312:	f9 01       	movw	r30, r18
    1314:	31 97       	sbiw	r30, 0x01	; 1
    1316:	f1 f7       	brne	.-4      	; 0x1314 <__stack+0x215>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1318:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    131a:	d9 f7       	brne	.-10     	; 0x1312 <__stack+0x213>
    131c:	5b c0       	rjmp	.+182    	; 0x13d4 <__stack+0x2d5>
				_delay_ms(2000);
				PORTB=0xA0;
				flag1=0;
				flag=0;
			}
			else if(dk=='3')
    131e:	80 91 be 02 	lds	r24, 0x02BE
    1322:	90 91 bf 02 	lds	r25, 0x02BF
    1326:	c3 97       	sbiw	r24, 0x33	; 51
    1328:	09 f0       	breq	.+2      	; 0x132c <__stack+0x22d>
    132a:	6d c0       	rjmp	.+218    	; 0x1406 <__stack+0x307>



void cmd(unsigned char c)
{
	PORTC=c;
    132c:	81 e0       	ldi	r24, 0x01	; 1
    132e:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    1330:	40 e4       	ldi	r20, 0x40	; 64
    1332:	f4 2e       	mov	r15, r20
    1334:	fb b8       	out	0x0b, r15	; 11
    1336:	00 ed       	ldi	r16, 0xD0	; 208
    1338:	17 e0       	ldi	r17, 0x07	; 7
    133a:	c8 01       	movw	r24, r16
    133c:	01 97       	sbiw	r24, 0x01	; 1
    133e:	f1 f7       	brne	.-4      	; 0x133c <__stack+0x23d>
	_delay_ms(1);
	PORTD=0x00;
    1340:	1b b8       	out	0x0b, r1	; 11



void cmd(unsigned char c)
{
	PORTC=c;
    1342:	80 e8       	ldi	r24, 0x80	; 128
    1344:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    1346:	fb b8       	out	0x0b, r15	; 11
    1348:	c8 01       	movw	r24, r16
    134a:	01 97       	sbiw	r24, 0x01	; 1
    134c:	f1 f7       	brne	.-4      	; 0x134a <__stack+0x24b>
	_delay_ms(1);
	PORTD=0x00;
    134e:	1b b8       	out	0x0b, r1	; 11
			{
				cmd(0x01);
				cmd(0x80);
				string("Face Match");
    1350:	8d e1       	ldi	r24, 0x1D	; 29
    1352:	92 e0       	ldi	r25, 0x02	; 2
    1354:	0e 94 df 03 	call	0x7be	; 0x7be <string>



void cmd(unsigned char c)
{
	PORTC=c;
    1358:	80 ec       	ldi	r24, 0xC0	; 192
    135a:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    135c:	fb b8       	out	0x0b, r15	; 11
    135e:	c8 01       	movw	r24, r16
    1360:	01 97       	sbiw	r24, 0x01	; 1
    1362:	f1 f7       	brne	.-4      	; 0x1360 <__stack+0x261>
	_delay_ms(1);
	PORTD=0x00;
    1364:	1b b8       	out	0x0b, r1	; 11
				cmd(0xC0);
				string("with shravan");
    1366:	86 ee       	ldi	r24, 0xE6	; 230
    1368:	91 e0       	ldi	r25, 0x01	; 1
    136a:	0e 94 df 03 	call	0x7be	; 0x7be <string>
    136e:	80 e2       	ldi	r24, 0x20	; 32
    1370:	9e e4       	ldi	r25, 0x4E	; 78
    1372:	28 ec       	ldi	r18, 0xC8	; 200
    1374:	30 e0       	ldi	r19, 0x00	; 0
    1376:	f9 01       	movw	r30, r18
    1378:	31 97       	sbiw	r30, 0x01	; 1
    137a:	f1 f7       	brne	.-4      	; 0x1378 <__stack+0x279>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    137c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    137e:	d9 f7       	brne	.-10     	; 0x1376 <__stack+0x277>



void cmd(unsigned char c)
{
	PORTC=c;
    1380:	81 e0       	ldi	r24, 0x01	; 1
    1382:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    1384:	30 e4       	ldi	r19, 0x40	; 64
    1386:	f3 2e       	mov	r15, r19
    1388:	fb b8       	out	0x0b, r15	; 11
    138a:	00 ed       	ldi	r16, 0xD0	; 208
    138c:	17 e0       	ldi	r17, 0x07	; 7
    138e:	c8 01       	movw	r24, r16
    1390:	01 97       	sbiw	r24, 0x01	; 1
    1392:	f1 f7       	brne	.-4      	; 0x1390 <__stack+0x291>
	_delay_ms(1);
	PORTD=0x00;
    1394:	1b b8       	out	0x0b, r1	; 11



void cmd(unsigned char c)
{
	PORTC=c;
    1396:	80 e8       	ldi	r24, 0x80	; 128
    1398:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    139a:	fb b8       	out	0x0b, r15	; 11
    139c:	c8 01       	movw	r24, r16
    139e:	01 97       	sbiw	r24, 0x01	; 1
    13a0:	f1 f7       	brne	.-4      	; 0x139e <__stack+0x29f>
	_delay_ms(1);
	PORTD=0x00;
    13a2:	1b b8       	out	0x0b, r1	; 11
				_delay_ms(2000);
				cmd(0x01);
				cmd(0x80);
				string("Access");
    13a4:	83 e3       	ldi	r24, 0x33	; 51
    13a6:	92 e0       	ldi	r25, 0x02	; 2
    13a8:	0e 94 df 03 	call	0x7be	; 0x7be <string>



void cmd(unsigned char c)
{
	PORTC=c;
    13ac:	80 ec       	ldi	r24, 0xC0	; 192
    13ae:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    13b0:	fb b8       	out	0x0b, r15	; 11
    13b2:	c8 01       	movw	r24, r16
    13b4:	01 97       	sbiw	r24, 0x01	; 1
    13b6:	f1 f7       	brne	.-4      	; 0x13b4 <__stack+0x2b5>
	_delay_ms(1);
	PORTD=0x00;
    13b8:	1b b8       	out	0x0b, r1	; 11
				cmd(0xC0);
				string("Granted");
    13ba:	8a e3       	ldi	r24, 0x3A	; 58
    13bc:	92 e0       	ldi	r25, 0x02	; 2
    13be:	0e 94 df 03 	call	0x7be	; 0x7be <string>
    13c2:	80 e2       	ldi	r24, 0x20	; 32
    13c4:	9e e4       	ldi	r25, 0x4E	; 78
    13c6:	28 ec       	ldi	r18, 0xC8	; 200
    13c8:	30 e0       	ldi	r19, 0x00	; 0
    13ca:	f9 01       	movw	r30, r18
    13cc:	31 97       	sbiw	r30, 0x01	; 1
    13ce:	f1 f7       	brne	.-4      	; 0x13cc <__stack+0x2cd>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    13d0:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    13d2:	d9 f7       	brne	.-10     	; 0x13ca <__stack+0x2cb>
				_delay_ms(2000);
				PORTB=0xA0;
    13d4:	80 ea       	ldi	r24, 0xA0	; 160
    13d6:	85 b9       	out	0x05, r24	; 5
    13d8:	66 24       	eor	r6, r6
    13da:	77 24       	eor	r7, r7
	{
		if(flag==0)
		{
			for(i=0;i<4;i++)
			{
				p[i]=0;
    13dc:	4e 01       	movw	r8, r28
    13de:	08 94       	sec
    13e0:	81 1c       	adc	r8, r1
    13e2:	91 1c       	adc	r9, r1
    13e4:	a8 ec       	ldi	r26, 0xC8	; 200
    13e6:	4a 2e       	mov	r4, r26
    13e8:	51 2c       	mov	r5, r1



void cmd(unsigned char c)
{
	PORTC=c;
    13ea:	aa 24       	eor	r10, r10
    13ec:	a3 94       	inc	r10
	PORTD=0x40;
    13ee:	f0 e4       	ldi	r31, 0x40	; 64
    13f0:	bf 2e       	mov	r11, r31
    13f2:	e0 ed       	ldi	r30, 0xD0	; 208
    13f4:	ee 2e       	mov	r14, r30
    13f6:	e7 e0       	ldi	r30, 0x07	; 7
    13f8:	fe 2e       	mov	r15, r30
				cmd(0xC0);
				string("Shravan");
				_delay_ms(3000);
				id=3;
		  }
		  else if(!strncmp(s2,p,4))
    13fa:	7d e0       	ldi	r23, 0x0D	; 13
    13fc:	27 2e       	mov	r2, r23
    13fe:	31 2c       	mov	r3, r1
    1400:	2c 0e       	add	r2, r28
    1402:	3d 1e       	adc	r3, r29
    1404:	fc cb       	rjmp	.-2056   	; 0xbfe <main+0xf6>
				_delay_ms(2000);
				PORTB=0xA0;
				flag1=0;
				flag=0;
			}
			else if(dk=='0')
    1406:	80 91 be 02 	lds	r24, 0x02BE
    140a:	90 91 bf 02 	lds	r25, 0x02BF
    140e:	c0 97       	sbiw	r24, 0x30	; 48
    1410:	51 f5       	brne	.+84     	; 0x1466 <__stack+0x367>



void cmd(unsigned char c)
{
	PORTC=c;
    1412:	81 e0       	ldi	r24, 0x01	; 1
    1414:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    1416:	20 e4       	ldi	r18, 0x40	; 64
    1418:	f2 2e       	mov	r15, r18
    141a:	fb b8       	out	0x0b, r15	; 11
    141c:	00 ed       	ldi	r16, 0xD0	; 208
    141e:	17 e0       	ldi	r17, 0x07	; 7
    1420:	c8 01       	movw	r24, r16
    1422:	01 97       	sbiw	r24, 0x01	; 1
    1424:	f1 f7       	brne	.-4      	; 0x1422 <__stack+0x323>
	_delay_ms(1);
	PORTD=0x00;
    1426:	1b b8       	out	0x0b, r1	; 11



void cmd(unsigned char c)
{
	PORTC=c;
    1428:	80 e8       	ldi	r24, 0x80	; 128
    142a:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    142c:	fb b8       	out	0x0b, r15	; 11
    142e:	c8 01       	movw	r24, r16
    1430:	01 97       	sbiw	r24, 0x01	; 1
    1432:	f1 f7       	brne	.-4      	; 0x1430 <__stack+0x331>
	_delay_ms(1);
	PORTD=0x00;
    1434:	1b b8       	out	0x0b, r1	; 11
			{
				cmd(0x01);
				cmd(0x80);
				string("Face");
    1436:	82 e4       	ldi	r24, 0x42	; 66
    1438:	92 e0       	ldi	r25, 0x02	; 2
    143a:	0e 94 df 03 	call	0x7be	; 0x7be <string>



void cmd(unsigned char c)
{
	PORTC=c;
    143e:	80 ec       	ldi	r24, 0xC0	; 192
    1440:	88 b9       	out	0x08, r24	; 8
	PORTD=0x40;
    1442:	fb b8       	out	0x0b, r15	; 11
    1444:	c8 01       	movw	r24, r16
    1446:	01 97       	sbiw	r24, 0x01	; 1
    1448:	f1 f7       	brne	.-4      	; 0x1446 <__stack+0x347>
	_delay_ms(1);
	PORTD=0x00;
    144a:	1b b8       	out	0x0b, r1	; 11
				cmd(0xC0);
				string("Not matched"); ////  Face not matched
    144c:	87 e4       	ldi	r24, 0x47	; 71
    144e:	92 e0       	ldi	r25, 0x02	; 2
    1450:	0e 94 df 03 	call	0x7be	; 0x7be <string>
    1454:	80 e3       	ldi	r24, 0x30	; 48
    1456:	95 e7       	ldi	r25, 0x75	; 117
    1458:	f4 01       	movw	r30, r8
    145a:	31 97       	sbiw	r30, 0x01	; 1
    145c:	f1 f7       	brne	.-4      	; 0x145a <__stack+0x35b>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    145e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1460:	d9 f7       	brne	.-10     	; 0x1458 <__stack+0x359>
				_delay_ms(3000);
				PORTB=0xA0;
    1462:	80 ea       	ldi	r24, 0xA0	; 160
    1464:	85 b9       	out	0x05, r24	; 5
    1466:	80 e0       	ldi	r24, 0x00	; 0
    1468:	90 e0       	ldi	r25, 0x00	; 0
    146a:	e2 cc       	rjmp	.-1596   	; 0xe30 <main+0x328>

0000146c <__udivmodqi4>:
    146c:	99 1b       	sub	r25, r25
    146e:	79 e0       	ldi	r23, 0x09	; 9
    1470:	04 c0       	rjmp	.+8      	; 0x147a <__udivmodqi4_ep>

00001472 <__udivmodqi4_loop>:
    1472:	99 1f       	adc	r25, r25
    1474:	96 17       	cp	r25, r22
    1476:	08 f0       	brcs	.+2      	; 0x147a <__udivmodqi4_ep>
    1478:	96 1b       	sub	r25, r22

0000147a <__udivmodqi4_ep>:
    147a:	88 1f       	adc	r24, r24
    147c:	7a 95       	dec	r23
    147e:	c9 f7       	brne	.-14     	; 0x1472 <__udivmodqi4_loop>
    1480:	80 95       	com	r24
    1482:	08 95       	ret

00001484 <__udivmodhi4>:
    1484:	aa 1b       	sub	r26, r26
    1486:	bb 1b       	sub	r27, r27
    1488:	51 e1       	ldi	r21, 0x11	; 17
    148a:	07 c0       	rjmp	.+14     	; 0x149a <__udivmodhi4_ep>

0000148c <__udivmodhi4_loop>:
    148c:	aa 1f       	adc	r26, r26
    148e:	bb 1f       	adc	r27, r27
    1490:	a6 17       	cp	r26, r22
    1492:	b7 07       	cpc	r27, r23
    1494:	10 f0       	brcs	.+4      	; 0x149a <__udivmodhi4_ep>
    1496:	a6 1b       	sub	r26, r22
    1498:	b7 0b       	sbc	r27, r23

0000149a <__udivmodhi4_ep>:
    149a:	88 1f       	adc	r24, r24
    149c:	99 1f       	adc	r25, r25
    149e:	5a 95       	dec	r21
    14a0:	a9 f7       	brne	.-22     	; 0x148c <__udivmodhi4_loop>
    14a2:	80 95       	com	r24
    14a4:	90 95       	com	r25
    14a6:	bc 01       	movw	r22, r24
    14a8:	cd 01       	movw	r24, r26
    14aa:	08 95       	ret

000014ac <strncmp>:
    14ac:	fb 01       	movw	r30, r22
    14ae:	dc 01       	movw	r26, r24
    14b0:	41 50       	subi	r20, 0x01	; 1
    14b2:	50 40       	sbci	r21, 0x00	; 0
    14b4:	30 f0       	brcs	.+12     	; 0x14c2 <strncmp+0x16>
    14b6:	8d 91       	ld	r24, X+
    14b8:	01 90       	ld	r0, Z+
    14ba:	80 19       	sub	r24, r0
    14bc:	19 f4       	brne	.+6      	; 0x14c4 <strncmp+0x18>
    14be:	00 20       	and	r0, r0
    14c0:	b9 f7       	brne	.-18     	; 0x14b0 <strncmp+0x4>
    14c2:	88 1b       	sub	r24, r24
    14c4:	99 0b       	sbc	r25, r25
    14c6:	08 95       	ret

000014c8 <_exit>:
    14c8:	f8 94       	cli

000014ca <__stop_program>:
    14ca:	ff cf       	rjmp	.-2      	; 0x14ca <__stop_program>
